<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>设信道带宽为16kHz,信噪比为30dB,则该信道的信道容量大约为</title>
    <link href="/2024/10/22/%E8%AE%BE%E4%BF%A1%E9%81%93%E5%B8%A6%E5%AE%BD%E4%B8%BA16kHz-%E4%BF%A1%E5%99%AA%E6%AF%94%E4%B8%BA30dB-%E5%88%99%E8%AF%A5%E4%BF%A1%E9%81%93%E7%9A%84%E4%BF%A1%E9%81%93%E5%AE%B9%E9%87%8F%E5%A4%A7%E7%BA%A6%E4%B8%BA/"/>
    <url>/2024/10/22/%E8%AE%BE%E4%BF%A1%E9%81%93%E5%B8%A6%E5%AE%BD%E4%B8%BA16kHz-%E4%BF%A1%E5%99%AA%E6%AF%94%E4%B8%BA30dB-%E5%88%99%E8%AF%A5%E4%BF%A1%E9%81%93%E7%9A%84%E4%BF%A1%E9%81%93%E5%AE%B9%E9%87%8F%E5%A4%A7%E7%BA%A6%E4%B8%BA/</url>
    
    <content type="html"><![CDATA[<p>根据香农信道容量公式：</p><p>[<br>C &#x3D; B \log_2(1 + S&#x2F;N)<br>]</p><p>其中：</p><ul><li>( C ) 是信道容量（单位：比特每秒，bps），</li><li>( B ) 是信道带宽（单位：赫兹，Hz），</li><li>( S&#x2F;N ) 是信噪比，通常以线性值表示。</li></ul><h3 id="已知条件："><a href="#已知条件：" class="headerlink" title="已知条件："></a>已知条件：</h3><ul><li>信道带宽 ( B &#x3D; 16 , \text{kHz} &#x3D; 16,000 , \text{Hz} ),</li><li>信噪比 ( \text{S&#x2F;N} &#x3D; 30 , \text{dB} ).</li></ul><p>首先，将信噪比从 dB 转换为线性值：<br>[<br>S&#x2F;N &#x3D; 10^{30&#x2F;10} &#x3D; 10^3 &#x3D; 1000<br>]</p><p>将这些值代入香农公式：<br>[<br>C &#x3D; 16000 \log_2(1 + 1000)<br>]</p><p>计算出 ( \log_2(1001) )，然后再乘以带宽 ( B )。</p><p>我们来计算这个值。</p><p>根据计算结果，信道容量大约为 <strong>159,476 bps</strong>（比特每秒）。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>openvpn中使用client1访问xxx域名时，走client2的网络流量来访问</title>
    <link href="/2024/10/10/openvpn%E4%B8%AD%E4%BD%BF%E7%94%A8client1%E8%AE%BF%E9%97%AExxx%E5%9F%9F%E5%90%8D%E6%97%B6%EF%BC%8C%E8%B5%B0client2%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%9D%A5%E8%AE%BF%E9%97%AE/"/>
    <url>/2024/10/10/openvpn%E4%B8%AD%E4%BD%BF%E7%94%A8client1%E8%AE%BF%E9%97%AExxx%E5%9F%9F%E5%90%8D%E6%97%B6%EF%BC%8C%E8%B5%B0client2%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%9D%A5%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<p>要让一个 OpenVPN 客户端（client1）通过另一个客户端（client2）的网络流量访问特定域名（如 xxx 域名），你可以采取以下步骤：</p><ol><li><p><strong>在 client2 上设置路由</strong>：<br>确保 client2 的 OpenVPN 配置中允许其他客户端通过它进行路由。你需要在 server.conf 中添加以下行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">client-to-client<br></code></pre></td></tr></table></figure><p>这将允许客户端之间的直接通信。</p></li><li><p><strong>在 client1 上设置路由</strong>：<br>在 client1 的 OpenVPN 配置文件中，你需要添加一条静态路由，让它的流量通过 client2。你可以通过以下方式实现：</p><ul><li><p>在 client1 的配置文件中添加如下内容（假设 client2 的 IP 是 10.8.0.2）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">route xxx 255.255.255.255 net_gateway<br></code></pre></td></tr></table></figure></li><li><p>如果 client2 的 IP 不是 10.8.0.2，请用实际的 IP 替换。</p></li></ul></li><li><p><strong>使用 iptables 或其他工具进行流量转发</strong>：<br>在 client2 上，你可能需要设置 iptables 规则，以便将来自 client1 的流量转发到外部网络。以下是一个简单的规则示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE<br></code></pre></td></tr></table></figure><p>确保 <code>10.8.0.0/24</code> 替换为你的 VPN 子网。</p></li><li><p><strong>修改 DNS 解析</strong>：<br>你可能需要在 client1 上修改 DNS 设置，确保它可以正确解析 xxx 域名。你可以在 OpenVPN 配置中添加以下行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">dhcp-option DNS 8.8.8.8<br></code></pre></td></tr></table></figure><p>替换成你想使用的 DNS 服务器。</p></li><li><p><strong>测试连接</strong>：<br>重启 OpenVPN 客户端，并测试 client1 是否能够通过 client2 的网络访问 xxx 域名。</p></li></ol><p>确保在进行这些更改时备份你的配置文件，以防需要恢复。如果遇到任何问题，可以查看 OpenVPN 的日志以获取更多信息。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用</title>
    <link href="/2024/09/29/%E4%BA%BF%E8%B5%9B%E9%80%9A%E7%94%B5%E5%AD%90%E6%96%87%E6%A1%A3%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FXStream%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%A9%E7%94%A8/"/>
    <url>/2024/09/29/%E4%BA%BF%E8%B5%9B%E9%80%9A%E7%94%B5%E5%AD%90%E6%96%87%E6%A1%A3%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FXStream%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>一、产品简介<br>亿赛通电子文档安全管理系统（简称：CDG）是一款电子文档安全加密软件，该系统利用驱动层透明加密技术，通过对电子文档的加密保护，防止内部员工泄密和外部人员非法窃取企业核心重要数据资产，对电子文档进行全生命周期防护，系统具有透明加密、主动加密、智能加密等多种加密方式，用户可根据部门涉密程度的不同（如核心部门和普通部门），部署力度轻重不一的梯度式文档加密防护，实现技术、管理、审计进行有机的结合，在内部构建起立体化的整体信息防泄露体系，使得成本、效率和安全三者达到平衡，实现电子文档的数据安全。<br>二、漏洞描述<br>亿赛通电子文档安全管理系统UploadFileFromClientServiceForClient接口处存在任意文件上传漏洞，未经授权的攻击者可通过此漏洞上传恶意后门文件，从而获取服务器权限。<br>三、影响范围<br>未知<br>四、复现环境<br>FOFA：app&#x3D;“亿赛通-电子文档安全管理系统”<br>五、漏洞复现<br>1.访问存在漏洞网站，抓包<br>2.POC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs angular2html">POST /CDGServer3/UploadFileFromClientServiceForClient?AFMALANMJCEOENIBDJMKFHBANGEPKHNOFJBMIFJPFNKFOKHJNMLCOIDDJGNEIPOLOKGAFAFJHDEJPHEPLFJHDGPBNELNFIICGFNGEOEFBKCDDCGJEPIKFHJFAOOHJEPNNCLFHDAFDNCGBAEELJFFHABJPDPIEEMIBOECDMDLEPBJGBGCGLEMBDFAGOGM HTTP/1.1<br>Host: IP：port<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br>Accept-Encoding: gzip, deflate, br<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br>Sec-Fetch-Dest: document<br>Sec-Fetch-Mode: navigate<br>Sec-Fetch-Site: none<br>Sec-Fetch-User: ?1<br>Upgrade-Insecure-Requests: 1<br><br><br>上传的文件内容<br></code></pre></td></tr></table></figure><p>3.测试，上传成功<br>4.访问ip:port&#x2F;tttT.jsp</p><p>利用源码：<a href="https://github.com/candyadmin/CDGXStreamDeserRCE">https://github.com/candyadmin/CDGXStreamDeserRCE</a><br>教程：<br><a href="https://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra">https://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra</a><br><a href="https://blog.csdn.net/uuzeray/article/details/136690493">https://blog.csdn.net/uuzeray/article/details/136690493</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>spring_state_machine</title>
    <link href="/2024/09/19/spring-state-machine/"/>
    <url>/2024/09/19/spring-state-machine/</url>
    
    <content type="html"><![CDATA[<p>Spring Statemachine 是一个用于处理复杂状态机的框架，能够帮助你管理和控制状态转换。以下是如何在 Spring Boot 项目中使用 Spring Statemachine 的基本步骤：</p><h3 id="1-添加依赖"><a href="#1-添加依赖" class="headerlink" title="1. 添加依赖"></a>1. <strong>添加依赖</strong></h3><p>首先，在你的 <code>pom.xml</code> 文件中添加 Spring Statemachine 依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.statemachine<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-statemachine-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span> <span class="hljs-comment">&lt;!-- 或者使用最新版本 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-定义状态和事件"><a href="#2-定义状态和事件" class="headerlink" title="2. 定义状态和事件"></a>2. <strong>定义状态和事件</strong></h3><p>在 Spring Statemachine 中，你需要定义状态和事件。这些通常是枚举类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">States</span> &#123;<br>    START,<br>    PROCESSING,<br>    FINISHED,<br>    ERROR<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">Events</span> &#123;<br>    BEGIN,<br>    COMPLETE,<br>    FAIL<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-配置状态机"><a href="#3-配置状态机" class="headerlink" title="3. 配置状态机"></a>3. <strong>配置状态机</strong></h3><p>接下来，你需要配置状态机的状态和事件。你可以创建一个配置类来完成这一工作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.EnableStateMachine;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineBuilder;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineConfigurerAdapter;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableStateMachine</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StateMachineConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">StateMachineConfigurerAdapter</span>&lt;States, Events&gt; &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(StateMachineStateConfigurer&lt;States, Events&gt; states)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        states<br>            .withStates()<br>                .initial(States.START)<br>                .state(States.PROCESSING)<br>                .state(States.FINISHED)<br>                .state(States.ERROR);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(StateMachineTransitionConfigurer&lt;States, Events&gt; transitions)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        transitions<br>            .withExternal()<br>                .source(States.START).target(States.PROCESSING).event(Events.BEGIN)<br>            .and()<br>            .withExternal()<br>                .source(States.PROCESSING).target(States.FINISHED).event(Events.COMPLETE)<br>            .and()<br>            .withExternal()<br>                .source(States.PROCESSING).target(States.ERROR).event(Events.FAIL);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-使用状态机"><a href="#4-使用状态机" class="headerlink" title="4. 使用状态机"></a>4. <strong>使用状态机</strong></h3><p>你可以在 Spring 组件中注入状态机并使用它来处理状态转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.StateMachine;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.StateMachineFactory;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StateMachineService</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StateMachine&lt;States, Events&gt; stateMachine;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">startProcess</span><span class="hljs-params">()</span> &#123;<br>        stateMachine.sendEvent(Events.BEGIN);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">completeProcess</span><span class="hljs-params">()</span> &#123;<br>        stateMachine.sendEvent(Events.COMPLETE);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">failProcess</span><span class="hljs-params">()</span> &#123;<br>        stateMachine.sendEvent(Events.FAIL);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-运行和测试"><a href="#5-运行和测试" class="headerlink" title="5. 运行和测试"></a>5. <strong>运行和测试</strong></h3><p>确保你已经启动了 Spring Boot 应用程序，并且在你的服务中调用状态机的方法来触发事件和状态转换。</p><h3 id="6-进一步定制"><a href="#6-进一步定制" class="headerlink" title="6. 进一步定制"></a>6. <strong>进一步定制</strong></h3><p>Spring Statemachine 提供了很多高级功能，比如状态持久化、事件监听器、状态机持久化等。如果你有更多复杂的需求，可以参考 <a href="https://docs.spring.io/spring-statemachine/docs/current/reference/html/">Spring Statemachine 官方文档</a> 以获取详细的配置信息和示例。</p><p>这些是基本的使用步骤，你可以根据实际需要进行更复杂的配置和定制。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Application-toolkit-trace-cross-thread</title>
    <link href="/2024/09/11/Application-toolkit-trace-cross-thread/"/>
    <url>/2024/09/11/Application-toolkit-trace-cross-thread/</url>
    
    <content type="html"><![CDATA[<h1 id="Trace-Cross-Thread"><a href="#Trace-Cross-Thread" class="headerlink" title="Trace Cross Thread"></a>Trace Cross Thread</h1><p>These APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.<br>All following are sample codes only to demonstrate how to adopt cross thread cases easier.</p><ul><li>Case 1.<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@TraceCrossThread</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallable</span>&lt;String&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Callable</span>&lt;String&gt; &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">call</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    <span class="hljs-type">ExecutorService</span> <span class="hljs-variable">executorService</span> <span class="hljs-operator">=</span> Executors.newFixedThreadPool(<span class="hljs-number">1</span>);<br>    executorService.submit(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MyCallable</span>());<br></code></pre></td></tr></table></figure></li><li>Case 2.<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ExecutorService</span> <span class="hljs-variable">executorService</span> <span class="hljs-operator">=</span> Executors.newFixedThreadPool(<span class="hljs-number">1</span>);<br>executorService.submit(CallableWrapper.of(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Callable</span>&lt;String&gt;() &#123;<br>    <span class="hljs-meta">@Override</span> <span class="hljs-keyword">public</span> String <span class="hljs-title function_">call</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>or<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ExecutorService</span> <span class="hljs-variable">executorService</span> <span class="hljs-operator">=</span> Executors.newFixedThreadPool(<span class="hljs-number">1</span>);<br>executorService.execute(RunnableWrapper.of(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;<br>    <span class="hljs-meta">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">//your code</span><br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure></li><li>Case 3.<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@TraceCrossThread</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MySupplier</span>&lt;String&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Supplier</span>&lt;String&gt; &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">get</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    CompletableFuture.supplyAsync(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MySupplier</span>&lt;String&gt;());<br></code></pre></td></tr></table></figure>or<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">CompletableFuture.supplyAsync(SupplierWrapper.of(()-&gt;&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAccept(System.out::println);<br></code></pre></td></tr></table></figure></li><li>Case 4.<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAcceptAsync(ConsumerWrapper.of(c -&gt; &#123;<br>    <span class="hljs-comment">// your code visit(url)</span><br>    System.out.println(<span class="hljs-string">&quot;ConsumerWrapper&quot;</span>);<br>&#125;));<br></code></pre></td></tr></table></figure>or<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenApplyAsync(FunctionWrapper.of(f -&gt; &#123;<br>    <span class="hljs-comment">// your code visit(url)</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;FunctionWrapper&quot;</span>;<br>&#125;));<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>交易下单时金额变化</title>
    <link href="/2024/09/11/%E4%BA%A4%E6%98%93%E4%B8%8B%E5%8D%95%E6%97%B6%E9%87%91%E9%A2%9D%E5%8F%98%E5%8C%96/"/>
    <url>/2024/09/11/%E4%BA%A4%E6%98%93%E4%B8%8B%E5%8D%95%E6%97%B6%E9%87%91%E9%A2%9D%E5%8F%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>账户信息:</p><p>​余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p><p>​净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p><p>​净值 &#x3D; 可用保证金+已用保证金</p><p>​浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p><p>下单时：</p><p>​余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p><p>​</p><p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p><p>​余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p><p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p><p>​余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/08/26/%E6%9B%B4%E6%94%B9%E7%82%B9%E5%B7%AE%E9%9C%80%E8%A6%81%E7%9A%84%E4%BF%AE%E6%94%B9%E6%96%B9%E6%A1%88%EF%BC%88%20%E8%B4%A6%E6%88%B7%20-%20%E6%96%B9%E6%B3%95%20%E5%8E%BB%E6%B4%97%E6%95%B0%E6%8D%AE/"/>
    <url>/2024/08/26/%E6%9B%B4%E6%94%B9%E7%82%B9%E5%B7%AE%E9%9C%80%E8%A6%81%E7%9A%84%E4%BF%AE%E6%94%B9%E6%96%B9%E6%A1%88%EF%BC%88%20%E8%B4%A6%E6%88%B7%20-%20%E6%96%B9%E6%B3%95%20%E5%8E%BB%E6%B4%97%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<p>账户信息:</p><p>​余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p><p>​净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p><p>​净值 &#x3D; 可用保证金+已用保证金</p><p>​浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p><p>下单时：</p><p>​余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p><p>​</p><p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p><p>​余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p><p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p><p>​余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>github 将远程仓库更新到自己的仓库中</title>
    <link href="/2024/08/13/github-%E5%B0%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%9B%B4%E6%96%B0%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%93%E5%BA%93%E4%B8%AD/"/>
    <url>/2024/08/13/github-%E5%B0%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%9B%B4%E6%96%B0%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%93%E5%BA%93%E4%B8%AD/</url>
    
    <content type="html"><![CDATA[<p>要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：</p><ol><li><p><strong>添加远程仓库</strong>（如果还没有添加远程仓库）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add upstream &lt;远程仓库的URL&gt;<br></code></pre></td></tr></table></figure><p>例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，<code>upstream</code> 就是你需要添加的远程仓库。</p></li><li><p><strong>获取远程仓库的更新</strong>：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git fetch upstream<br></code></pre></td></tr></table></figure><p>这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。</p></li><li><p><strong>将远程仓库的更新合并到你的分支</strong>：</p><ul><li>如果你在 <code>main</code> 分支上，并希望将 <code>upstream/main</code> 的更新合并到本地的 <code>main</code> 分支：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout main<br>git merge upstream/main<br></code></pre></td></tr></table></figure>这会将远程 <code>main</code> 分支的更新合并到你本地的 <code>main</code> 分支中。</li></ul></li><li><p><strong>处理可能的冲突</strong>：</p><ul><li>如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add &lt;解决冲突的文件&gt;<br>git commit -m <span class="hljs-string">&quot;Resolved merge conflicts&quot;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>将更新推送到你自己的远程仓库</strong>（如果需要）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin main<br></code></pre></td></tr></table></figure><p>这会将你本地 <code>main</code> 分支的更新推送到你自己的GitHub仓库中。</p></li></ol><p>通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>linux下通过端口找到进程</title>
    <link href="/2024/08/09/linux%E4%B8%8B%E9%80%9A%E8%BF%87%E7%AB%AF%E5%8F%A3%E6%89%BE%E5%88%B0%E8%BF%9B%E7%A8%8B/"/>
    <url>/2024/08/09/linux%E4%B8%8B%E9%80%9A%E8%BF%87%E7%AB%AF%E5%8F%A3%E6%89%BE%E5%88%B0%E8%BF%9B%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：</p><h3 id="1-使用-lsof-命令"><a href="#1-使用-lsof-命令" class="headerlink" title="1. 使用 lsof 命令"></a>1. 使用 <code>lsof</code> 命令</h3><p><code>lsof</code> 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsof -i :&lt;端口号&gt;<br></code></pre></td></tr></table></figure><p>例如，查找占用80端口的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsof -i :80<br></code></pre></td></tr></table></figure><h3 id="2-使用-netstat-命令"><a href="#2-使用-netstat-命令" class="headerlink" title="2. 使用 netstat 命令"></a>2. 使用 <code>netstat</code> 命令</h3><p><code>netstat</code> 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure><p>例如，查找占用80端口的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -tuln | grep :80<br></code></pre></td></tr></table></figure><p>结合 <code>netstat</code> 和 <code>grep</code> 命令，还可以找到对应的PID：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -tulnp | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure><h3 id="3-使用-ss-命令"><a href="#3-使用-ss-命令" class="headerlink" title="3. 使用 ss 命令"></a>3. 使用 <code>ss</code> 命令</h3><p><code>ss</code> 是 <code>netstat</code> 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ss -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure><p>例如，查找占用80端口的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ss -tuln | grep :80<br></code></pre></td></tr></table></figure><h3 id="4-使用-fuser-命令"><a href="#4-使用-fuser-命令" class="headerlink" title="4. 使用 fuser 命令"></a>4. 使用 <code>fuser</code> 命令</h3><p><code>fuser</code> 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fuser &lt;端口号&gt;/tcp<br></code></pre></td></tr></table></figure><p>例如，查找占用80端口的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fuser 80/tcp<br></code></pre></td></tr></table></figure><h3 id="5-查看详细的进程信息"><a href="#5-查看详细的进程信息" class="headerlink" title="5. 查看详细的进程信息"></a>5. 查看详细的进程信息</h3><p>一旦获得了PID，可以使用 <code>ps</code> 命令来查看进程的详细信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -p &lt;PID&gt; -o pid,cmd<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -p 1234 -o pid,cmd<br></code></pre></td></tr></table></figure><p>这将显示PID为1234的进程的命令行。</p><p>通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>openvpn-部署脚本</title>
    <link href="/2024/08/07/openvpn-%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/"/>
    <url>/2024/08/07/openvpn-%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>脚本连接：<br><a href="openvpn-%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/openvpn.sh">openvpn.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># https://github.com/hwdsl2/openvpn-install</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Based on the work of Nyr and contributors at:</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://github.com/Nyr/openvpn-install</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Copyright (c) 2022-2024 Lin Song &lt;linsongui@gmail.com&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Copyright (c) 2013-2023 Nyr</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Released under the MIT License, see the accompanying file LICENSE.txt</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">or https://opensource.org/licenses/MIT</span><br><br>exiterr()  &#123; echo &quot;Error: $1&quot; &gt;&amp;2; exit 1; &#125;<br>exiterr2() &#123; exiterr &quot;&#x27;apt-get install&#x27; failed.&quot;; &#125;<br>exiterr3() &#123; exiterr &quot;&#x27;yum install&#x27; failed.&quot;; &#125;<br>exiterr4() &#123; exiterr &quot;&#x27;zypper install&#x27; failed.&quot;; &#125;<br><br>check_ip() &#123;<br>IP_REGEX=&#x27;^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$&#x27;<br>printf &#x27;%s&#x27; &quot;$1&quot; | tr -d &#x27;\n&#x27; | grep -Eq &quot;$IP_REGEX&quot;<br>&#125;<br><br>check_dns_name() &#123;<br>FQDN_REGEX=&#x27;^([a-zA-Z0-9]([a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?\.)+[a-zA-Z]&#123;2,&#125;$&#x27;<br>printf &#x27;%s&#x27; &quot;$1&quot; | tr -d &#x27;\n&#x27; | grep -Eq &quot;$FQDN_REGEX&quot;<br>&#125;<br><br>check_root() &#123;<br>if [ &quot;$(id -u)&quot; != 0 ]; then<br>exiterr &quot;This installer must be run as root. Try &#x27;sudo bash $0&#x27;&quot;<br>fi<br>&#125;<br><br>check_shell() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Detect Debian <span class="hljs-built_in">users</span> running the script with <span class="hljs-string">&quot;sh&quot;</span> instead of bash</span><br>if readlink /proc/$$/exe | grep -q &quot;dash&quot;; then<br>exiterr &#x27;This installer needs to be run with &quot;bash&quot;, not &quot;sh&quot;.&#x27;<br>fi<br>&#125;<br><br>check_kernel() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Detect OpenVZ 6</span><br>if [[ $(uname -r | cut -d &quot;.&quot; -f 1) -eq 2 ]]; then<br>exiterr &quot;The system is running an old kernel, which is incompatible with this installer.&quot;<br>fi<br>&#125;<br><br>check_os() &#123;<br>if grep -qs &quot;ubuntu&quot; /etc/os-release; then<br>os=&quot;ubuntu&quot;<br>os_version=$(grep &#x27;VERSION_ID&#x27; /etc/os-release | cut -d &#x27;&quot;&#x27; -f 2 | tr -d &#x27;.&#x27;)<br>group_name=&quot;nogroup&quot;<br>elif [[ -e /etc/debian_version ]]; then<br>os=&quot;debian&quot;<br>os_version=$(grep -oE &#x27;[0-9]+&#x27; /etc/debian_version | head -1)<br>group_name=&quot;nogroup&quot;<br>elif [[ -e /etc/almalinux-release || -e /etc/rocky-release || -e /etc/centos-release ]]; then<br>os=&quot;centos&quot;<br>os_version=$(grep -shoE &#x27;[0-9]+&#x27; /etc/almalinux-release /etc/rocky-release /etc/centos-release | head -1)<br>group_name=&quot;nobody&quot;<br>elif grep -qs &quot;Amazon Linux release 2 &quot; /etc/system-release; then<br>os=&quot;centos&quot;<br>os_version=&quot;7&quot;<br>group_name=&quot;nobody&quot;<br>elif grep -qs &quot;Amazon Linux release 2023&quot; /etc/system-release; then<br>exiterr &quot;Amazon Linux 2023 is not supported.&quot;<br>elif [[ -e /etc/fedora-release ]]; then<br>os=&quot;fedora&quot;<br>os_version=$(grep -oE &#x27;[0-9]+&#x27; /etc/fedora-release | head -1)<br>group_name=&quot;nobody&quot;<br>elif [[ -e /etc/SUSE-brand &amp;&amp; &quot;$(head -1 /etc/SUSE-brand)&quot; == &quot;openSUSE&quot; ]]; then<br>os=&quot;openSUSE&quot;<br>os_version=$(tail -1 /etc/SUSE-brand | grep -oE &#x27;[0-9\\.]+&#x27;)<br>group_name=&quot;nogroup&quot;<br>else<br>exiterr &quot;This installer seems to be running on an unsupported distribution.<br>Supported distros are Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Amazon Linux 2.&quot;<br>fi<br>&#125;<br><br>check_os_ver() &#123;<br>if [[ &quot;$os&quot; == &quot;ubuntu&quot; &amp;&amp; &quot;$os_version&quot; -lt 2004 ]]; then<br>exiterr &quot;Ubuntu 20.04 or higher is required to use this installer.<br>This version of Ubuntu is too old and unsupported.&quot;<br>fi<br>if [[ &quot;$os&quot; == &quot;debian&quot; &amp;&amp; &quot;$os_version&quot; -lt 10 ]]; then<br>exiterr &quot;Debian 10 or higher is required to use this installer.<br>This version of Debian is too old and unsupported.&quot;<br>fi<br>if [[ &quot;$os&quot; == &quot;centos&quot; &amp;&amp; &quot;$os_version&quot; -lt 7 ]]; then<br>exiterr &quot;CentOS 7 or higher is required to use this installer.<br>This version of CentOS is too old and unsupported.&quot;<br>fi<br>&#125;<br><br>check_tun() &#123;<br>if [[ ! -e /dev/net/tun ]] || ! ( exec 7&lt;&gt;/dev/net/tun ) 2&gt;/dev/null; then<br>exiterr &quot;The system does not have the TUN device available.<br>TUN needs to be enabled before running this installer.&quot;<br>fi<br>&#125;<br><br>set_client_name() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Allow a limited <span class="hljs-built_in">set</span> of characters to avoid conflicts</span><br>client=$(sed &#x27;s/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g&#x27; &lt;&lt;&lt; &quot;$unsanitized_client&quot;)<br>&#125;<br><br>parse_args() &#123;<br>while [ &quot;$#&quot; -gt 0 ]; do<br>case $1 in<br>--auto)<br>auto=1<br>shift<br>;;<br>--addclient)<br>add_client=1<br>unsanitized_client=&quot;$2&quot;<br>shift<br>shift<br>;;<br>--exportclient)<br>export_client=1<br>unsanitized_client=&quot;$2&quot;<br>shift<br>shift<br>;;<br>--listclients)<br>list_clients=1<br>shift<br>;;<br>--revokeclient)<br>revoke_client=1<br>unsanitized_client=&quot;$2&quot;<br>shift<br>shift<br>;;<br>--uninstall)<br>remove_ovpn=1<br>shift<br>;;<br>-y|--yes)<br>assume_yes=1<br>shift<br>;;<br>-h|--help)<br>show_usage<br>;;<br>*)<br>show_usage &quot;Unknown parameter: $1&quot;<br>;;<br>esac<br>done<br>&#125;<br><br>check_args() &#123;<br>if [ &quot;$auto&quot; = 1 ] &amp;&amp; [ -e &quot;$OVPN_CONF&quot; ]; then<br>echo &quot;Error: Invalid parameter &#x27;--auto&#x27;. OpenVPN is already set up on this server.&quot; &gt;&amp;2<br>echo &quot;       To manage OpenVPN clients, re-run this script without &#x27;--auto&#x27;.&quot; &gt;&amp;2<br>exit 1<br>fi<br>if [ &quot;$((add_client + export_client + list_clients + revoke_client))&quot; -gt 1 ]; then<br>show_usage &quot;Invalid parameters. Specify only one of &#x27;--addclient&#x27;, &#x27;--exportclient&#x27;, &#x27;--listclients&#x27; or &#x27;--revokeclient&#x27;.&quot;<br>fi<br>if [ &quot;$remove_ovpn&quot; = 1 ]; then<br>if [ &quot;$((add_client + export_client + list_clients + revoke_client + auto))&quot; -gt 0 ]; then<br>show_usage &quot;Invalid parameters. &#x27;--uninstall&#x27; cannot be specified with other parameters.&quot;<br>fi<br>fi<br>if [ ! -e &quot;$OVPN_CONF&quot; ]; then<br>[ &quot;$add_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before adding a client.&quot;<br>[ &quot;$export_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before exporting a client.&quot;<br>[ &quot;$list_clients&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before listing clients.&quot;<br>[ &quot;$revoke_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before revoking a client.&quot;<br>[ &quot;$remove_ovpn&quot; = 1 ] &amp;&amp; exiterr &quot;Cannot remove OpenVPN because it has not been set up on this server.&quot;<br>fi<br>if [ &quot;$add_client&quot; = 1 ]; then<br>set_client_name<br>if [ -z &quot;$client&quot; ]; then<br>exiterr &quot;Invalid client name. Use one word only, no special characters except &#x27;-&#x27; and &#x27;_&#x27;.&quot;<br>elif [ -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]; then<br>exiterr &quot;$client: invalid name. Client already exists.&quot;<br>fi<br>fi<br>if [ &quot;$export_client&quot; = 1 ] || [ &quot;$revoke_client&quot; = 1 ]; then<br>set_client_name<br>if [ -z &quot;$client&quot; ] || [ ! -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]; then<br>exiterr &quot;Invalid client name, or client does not exist.&quot;<br>fi<br>fi<br>&#125;<br><br>check_nftables() &#123;<br>if [ &quot;$os&quot; = &quot;centos&quot; ]; then<br>if grep -qs &quot;hwdsl2 VPN script&quot; /etc/sysconfig/nftables.conf \<br>|| systemctl is-active --quiet nftables 2&gt;/dev/null; then<br>exiterr &quot;This system has nftables enabled, which is not supported by this installer.&quot;<br>fi<br>fi<br>&#125;<br><br>install_wget() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Detect some Debian minimal setups <span class="hljs-built_in">where</span> neither wget nor curl are installed</span><br>if ! hash wget 2&gt;/dev/null &amp;&amp; ! hash curl 2&gt;/dev/null; then<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo &quot;Wget is required to use this installer.&quot;<br>read -n1 -r -p &quot;Press any key to install Wget and continue...&quot;<br>fi<br>export DEBIAN_FRONTEND=noninteractive<br>(<br>set -x<br>apt-get -yqq update || apt-get -yqq update<br>apt-get -yqq install wget &gt;/dev/null<br>) || exiterr2<br>fi<br>&#125;<br><br>install_iproute() &#123;<br>if ! hash ip 2&gt;/dev/null; then<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo &quot;iproute is required to use this installer.&quot;<br>read -n1 -r -p &quot;Press any key to install iproute and continue...&quot;<br>fi<br>if [ &quot;$os&quot; = &quot;debian&quot; ] || [ &quot;$os&quot; = &quot;ubuntu&quot; ]; then<br>export DEBIAN_FRONTEND=noninteractive<br>(<br>set -x<br>apt-get -yqq update || apt-get -yqq update<br>apt-get -yqq install iproute2 &gt;/dev/null<br>) || exiterr2<br>elif [ &quot;$os&quot; = &quot;openSUSE&quot; ]; then<br>(<br>set -x<br>zypper install iproute2 &gt;/dev/null<br>) || exiterr4<br>else<br>(<br>set -x<br>yum -y -q install iproute &gt;/dev/null<br>) || exiterr3<br>fi<br>fi<br>&#125;<br><br>show_header() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>OpenVPN Script<br>https://github.com/hwdsl2/openvpn-install<br>EOF<br>&#125;<br><br>show_header2() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>Welcome to this OpenVPN server installer!<br>GitHub: https://github.com/hwdsl2/openvpn-install<br><br>EOF<br>&#125;<br><br>show_header3() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>Copyright (c) 2022-2024 Lin Song<br>Copyright (c) 2013-2023 Nyr<br>EOF<br>&#125;<br><br>show_usage() &#123;<br>if [ -n &quot;$1&quot; ]; then<br>echo &quot;Error: $1&quot; &gt;&amp;2<br>fi<br>show_header<br>show_header3<br>cat 1&gt;&amp;2 &lt;&lt;EOF<br><br>Usage: bash $0 [options]<br><br>Options:<br>  --auto                        auto install OpenVPN using default options<br>  --addclient [client name]     add a new client<br>  --exportclient [client name]  export configuration for an existing client<br>  --listclients                 list the names of existing clients<br>  --revokeclient [client name]  revoke an existing client<br>  --uninstall                   remove OpenVPN and delete all configuration<br>  -y, --yes                     assume &quot;yes&quot; as answer to prompts when revoking a client or removing OpenVPN<br>  -h, --help                    show this help message and exit<br><br>To customize install options, run this script without arguments.<br>EOF<br>exit 1<br>&#125;<br><br>show_welcome() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>show_header2<br>echo &#x27;I need to ask you a few questions before starting setup.&#x27;<br>echo &#x27;You can use the default options and just press enter if you are OK with them.&#x27;<br>else<br>show_header<br>echo<br>echo &#x27;Starting OpenVPN setup using default options.&#x27;<br>fi<br>&#125;<br><br>enter_server_address() &#123;<br>echo<br>echo &quot;Do you want OpenVPN clients to connect to this server using a DNS name,&quot;<br>printf &quot;e.g. vpn.example.com, instead of its IP address? [y/N] &quot;<br>read -r response<br>case $response in<br>[yY][eE][sS]|[yY])<br>use_dns_name=1<br>echo<br>;;<br>*)<br>use_dns_name=0<br>;;<br>esac<br>if [ &quot;$use_dns_name&quot; = 1 ]; then<br>read -rp &quot;Enter the DNS name of this VPN server: &quot; server_addr<br>until check_dns_name &quot;$server_addr&quot;; do<br>echo &quot;Invalid DNS name. You must enter a fully qualified domain name (FQDN).&quot;<br>read -rp &quot;Enter the DNS name of this VPN server: &quot; server_addr<br>done<br>ip=&quot;$server_addr&quot;<br>echo<br>echo &quot;Note: Make sure this DNS name resolves to the IPv4 address&quot;<br>echo &quot;      of this server. If you add or update the DNS record&quot;<br>echo &quot;      at a later time, reboot this server to take effect.&quot;<br>else<br>detect_ip<br>check_nat_ip<br>fi<br>&#125;<br><br>find_public_ip() &#123;<br>ip_url1=&quot;http://ipv4.icanhazip.com&quot;<br>ip_url2=&quot;http://ip1.dynupdate.no-ip.com&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Get public IP and sanitize with grep</span><br>get_public_ip=$(grep -m 1 -oE &#x27;^[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27; &lt;&lt;&lt; &quot;$(wget -T 10 -t 1 -4qO- &quot;$ip_url1&quot; || curl -m 10 -4Ls &quot;$ip_url1&quot;)&quot;)<br>if ! check_ip &quot;$get_public_ip&quot;; then<br>get_public_ip=$(grep -m 1 -oE &#x27;^[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27; &lt;&lt;&lt; &quot;$(wget -T 10 -t 1 -4qO- &quot;$ip_url2&quot; || curl -m 10 -4Ls &quot;$ip_url2&quot;)&quot;)<br>fi<br>&#125;<br><br>detect_ip() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">If system has a single IPv4, it is selected automatically.</span><br>if [[ $(ip -4 addr | grep inet | grep -vEc &#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;) -eq 1 ]]; then<br>ip=$(ip -4 addr | grep inet | grep -vE &#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>else<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Use the IP address on the default route</span><br>ip=$(ip -4 route get 1 | sed &#x27;s/ uid .*//&#x27; | awk &#x27;&#123;print $NF;exit&#125;&#x27; 2&gt;/dev/null)<br>if ! check_ip &quot;$ip&quot;; then<br>find_public_ip<br>ip_match=0<br>if [ -n &quot;$get_public_ip&quot; ]; then<br>ip_list=$(ip -4 addr | grep inet | grep -vE &#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>while IFS= read -r line; do<br>if [ &quot;$line&quot; = &quot;$get_public_ip&quot; ]; then<br>ip_match=1<br>ip=&quot;$line&quot;<br>fi<br>done &lt;&lt;&lt; &quot;$ip_list&quot;<br>fi<br>if [ &quot;$ip_match&quot; = 0 ]; then<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;Which IPv4 address should be used?&quot;<br>num_of_ip=$(ip -4 addr | grep inet | grep -vEc &#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>ip -4 addr | grep inet | grep -vE &#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | nl -s &#x27;) &#x27;<br>read -rp &quot;IPv4 address [1]: &quot; ip_num<br>until [[ -z &quot;$ip_num&quot; || &quot;$ip_num&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$ip_num&quot; -le &quot;$num_of_ip&quot; ]]; do<br>echo &quot;$ip_num: invalid selection.&quot;<br>read -rp &quot;IPv4 address [1]: &quot; ip_num<br>done<br>[[ -z &quot;$ip_num&quot; ]] &amp;&amp; ip_num=1<br>else<br>ip_num=1<br>fi<br>ip=$(ip -4 addr | grep inet | grep -vE &#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | sed -n &quot;$ip_num&quot;p)<br>fi<br>fi<br>fi<br>if ! check_ip &quot;$ip&quot;; then<br>echo &quot;Error: Could not detect this server&#x27;s IP address.&quot; &gt;&amp;2<br>echo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>exit 1<br>fi<br>&#125;<br><br>check_nat_ip() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">If <span class="hljs-variable">$ip</span> is a private IP address, the server must be behind NAT</span><br>if printf &#x27;%s&#x27; &quot;$ip&quot; | grep -qE &#x27;^(10|127|172\.(1[6-9]|2[0-9]|3[0-1])|192\.168|169\.254)\.&#x27;; then<br>find_public_ip<br>if ! check_ip &quot;$get_public_ip&quot;; then<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;This server is behind NAT. What is the public IPv4 address?&quot;<br>read -rp &quot;Public IPv4 address: &quot; public_ip<br>until check_ip &quot;$public_ip&quot;; do<br>echo &quot;Invalid input.&quot;<br>read -rp &quot;Public IPv4 address: &quot; public_ip<br>done<br>else<br>echo &quot;Error: Could not detect this server&#x27;s public IP.&quot; &gt;&amp;2<br>echo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>exit 1<br>fi<br>else<br>public_ip=&quot;$get_public_ip&quot;<br>fi<br>fi<br>&#125;<br><br>show_config() &#123;<br>if [ &quot;$auto&quot; != 0 ]; then<br>echo<br>printf &#x27;%s&#x27; &quot;Server IP: &quot;<br>[ -n &quot;$public_ip&quot; ] &amp;&amp; printf &#x27;%s\n&#x27; &quot;$public_ip&quot; || printf &#x27;%s\n&#x27; &quot;$ip&quot;<br>echo &quot;Port: UDP/1194&quot;<br>echo &quot;Client name: client&quot;<br>echo &quot;Client DNS: Google Public DNS&quot;<br>fi<br>&#125;<br><br>detect_ipv6() &#123;<br>ip6=&quot;&quot;<br>if [[ $(ip -6 addr | grep -c &#x27;inet6 [23]&#x27;) -ne 0 ]]; then<br>ip6=$(ip -6 addr | grep &#x27;inet6 [23]&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;([0-9a-fA-F]&#123;0,4&#125;:)&#123;1,7&#125;[0-9a-fA-F]&#123;0,4&#125;&#x27; | sed -n 1p)<br>fi<br>&#125;<br><br>select_protocol() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;Which protocol should OpenVPN use?&quot;<br>echo &quot;   1) UDP (recommended)&quot;<br>echo &quot;   2) TCP&quot;<br>read -rp &quot;Protocol [1]: &quot; protocol<br>until [[ -z &quot;$protocol&quot; || &quot;$protocol&quot; =~ ^[12]$ ]]; do<br>echo &quot;$protocol: invalid selection.&quot;<br>read -rp &quot;Protocol [1]: &quot; protocol<br>done<br>case &quot;$protocol&quot; in<br>1|&quot;&quot;)<br>protocol=udp<br>;;<br>2)<br>protocol=tcp<br>;;<br>esac<br>else<br>protocol=udp<br>fi<br>&#125;<br><br>select_port() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;Which port should OpenVPN listen to?&quot;<br>read -rp &quot;Port [1194]: &quot; port<br>until [[ -z &quot;$port&quot; || &quot;$port&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$port&quot; -le 65535 ]]; do<br>echo &quot;$port: invalid port.&quot;<br>read -rp &quot;Port [1194]: &quot; port<br>done<br>[[ -z &quot;$port&quot; ]] &amp;&amp; port=1194<br>else<br>port=1194<br>fi<br>&#125;<br><br>enter_custom_dns() &#123;<br>read -rp &quot;Enter primary DNS server: &quot; dns1<br>until check_ip &quot;$dns1&quot;; do<br>echo &quot;Invalid DNS server.&quot;<br>read -rp &quot;Enter primary DNS server: &quot; dns1<br>done<br>read -rp &quot;Enter secondary DNS server (Enter to skip): &quot; dns2<br>until [ -z &quot;$dns2&quot; ] || check_ip &quot;$dns2&quot;; do<br>echo &quot;Invalid DNS server.&quot;<br>read -rp &quot;Enter secondary DNS server (Enter to skip): &quot; dns2<br>done<br>&#125;<br><br>select_dns() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;Select a DNS server for the clients:&quot;<br>echo &quot;   1) Current system resolvers&quot;<br>echo &quot;   2) Google Public DNS&quot;<br>echo &quot;   3) Cloudflare DNS&quot;<br>echo &quot;   4) OpenDNS&quot;<br>echo &quot;   5) Quad9&quot;<br>echo &quot;   6) AdGuard DNS&quot;<br>echo &quot;   7) Custom&quot;<br>read -rp &quot;DNS server [2]: &quot; dns<br>until [[ -z &quot;$dns&quot; || &quot;$dns&quot; =~ ^[1-7]$ ]]; do<br>echo &quot;$dns: invalid selection.&quot;<br>read -rp &quot;DNS server [2]: &quot; dns<br>done<br>else<br>dns=2<br>fi<br>if [ &quot;$dns&quot; = 7 ]; then<br>enter_custom_dns<br>fi<br>&#125;<br><br>enter_first_client_name() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;Enter a name for the first client:&quot;<br>read -rp &quot;Name [client]: &quot; unsanitized_client<br>set_client_name<br>[[ -z &quot;$client&quot; ]] &amp;&amp; client=client<br>else<br>client=client<br>fi<br>&#125;<br><br>show_setup_ready() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>echo<br>echo &quot;OpenVPN installation is ready to begin.&quot;<br>fi<br>&#125;<br><br>check_firewall() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Install a firewall <span class="hljs-keyword">if</span> firewalld or iptables are not already available</span><br>if ! systemctl is-active --quiet firewalld.service &amp;&amp; ! hash iptables 2&gt;/dev/null; then<br>if [[ &quot;$os&quot; == &quot;centos&quot; || &quot;$os&quot; == &quot;fedora&quot; ]]; then<br>firewall=&quot;firewalld&quot;<br>elif [[ &quot;$os&quot; == &quot;openSUSE&quot; ]]; then<br>firewall=&quot;firewalld&quot;<br>elif [[ &quot;$os&quot; == &quot;debian&quot; || &quot;$os&quot; == &quot;ubuntu&quot; ]]; then<br>firewall=&quot;iptables&quot;<br>fi<br>if [[ &quot;$firewall&quot; == &quot;firewalld&quot; ]]; then<br><span class="hljs-meta prompt_"># </span><span class="language-bash">We don<span class="hljs-string">&#x27;t want to silently enable firewalld, so we give a subtle warning</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">If the user continues, firewalld will be installed and enabled during setup</span></span><br>echo<br>echo &quot;Note: firewalld, which is required to manage routing tables, will also be installed.&quot;<br>fi<br>fi<br>&#125;<br><br>abort_and_exit() &#123;<br>echo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>exit 1<br>&#125;<br><br>confirm_setup() &#123;<br>if [ &quot;$auto&quot; = 0 ]; then<br>printf &quot;Do you want to continue? [Y/n] &quot;<br>read -r response<br>case $response in<br>[yY][eE][sS]|[yY]|&#x27;&#x27;)<br>:<br>;;<br>*)<br>abort_and_exit<br>;;<br>esac<br>fi<br>&#125;<br><br>show_start_setup() &#123;<br>echo<br>echo &quot;Installing OpenVPN, please wait...&quot;<br>&#125;<br><br>disable_limitnproc() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">If running inside a container, disable LimitNPROC to prevent conflicts</span></span><br>if systemd-detect-virt -cq; then<br>mkdir /etc/systemd/system/openvpn-server@server.service.d/ 2&gt;/dev/null<br>echo &quot;[Service]<br>LimitNPROC=infinity&quot; &gt; /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf<br>fi<br>&#125;<br><br>install_pkgs() &#123;<br>if [[ &quot;$os&quot; = &quot;debian&quot; || &quot;$os&quot; = &quot;ubuntu&quot; ]]; then<br>export DEBIAN_FRONTEND=noninteractive<br>(<br>set -x<br>apt-get -yqq update || apt-get -yqq update<br>apt-get -yqq --no-install-recommends install openvpn &gt;/dev/null<br>) || exiterr2<br>(<br>set -x<br>apt-get -yqq install openssl ca-certificates $firewall &gt;/dev/null<br>) || exiterr2<br>elif [[ &quot;$os&quot; = &quot;centos&quot; ]]; then<br>if grep -qs &quot;Amazon Linux release 2 &quot; /etc/system-release; then<br>(<br>set -x<br>amazon-linux-extras install epel -y &gt;/dev/null<br>) || exit 1<br>else<br>(<br>set -x<br>yum -y -q install epel-release &gt;/dev/null<br>) || exiterr3<br>fi<br>(<br>set -x<br>yum -y -q install openvpn openssl ca-certificates tar $firewall &gt;/dev/null 2&gt;&amp;1<br>) || exiterr3<br>elif [[ &quot;$os&quot; = &quot;fedora&quot; ]]; then<br>(<br>set -x<br>dnf install -y openvpn openssl ca-certificates tar $firewall &gt;/dev/null<br>) || exiterr &quot;&#x27;dnf install&#x27; failed.&quot;<br>else<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Else, OS must be openSUSE</span></span><br>(<br>set -x<br>zypper install -y openvpn openssl ca-certificates tar $firewall &gt;/dev/null<br>) || exiterr4<br>fi<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">If firewalld was just installed, enable it</span></span><br>if [[ &quot;$firewall&quot; == &quot;firewalld&quot; ]]; then<br>(<br>set -x<br>systemctl enable --now firewalld.service &gt;/dev/null 2&gt;&amp;1<br>)<br>fi<br>&#125;<br><br>remove_pkgs() &#123;<br>if [[ &quot;$os&quot; = &quot;debian&quot; || &quot;$os&quot; = &quot;ubuntu&quot; ]]; then<br>(<br>set -x<br>rm -rf /etc/openvpn/server<br>apt-get remove --purge -y openvpn &gt;/dev/null<br>)<br>elif [[ &quot;$os&quot; = &quot;openSUSE&quot; ]]; then<br>(<br>set -x<br>zypper remove -y openvpn &gt;/dev/null<br>rm -rf /etc/openvpn/server<br>)<br>rm -f /etc/openvpn/ipp.txt<br>else<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Else, OS must be CentOS or Fedora</span></span><br>(<br>set -x<br>yum -y -q remove openvpn &gt;/dev/null<br>rm -rf /etc/openvpn/server<br>)<br>fi<br>&#125;<br><br>create_firewall_rules() &#123;<br>if systemctl is-active --quiet firewalld.service; then<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Using both permanent and not permanent rules to avoid a firewalld</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">reload.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">We don&#x27;</span>t use --add-service=openvpn because that would only work with</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">the default port and protocol.</span><br>firewall-cmd -q --add-port=&quot;$port&quot;/&quot;$protocol&quot;<br>firewall-cmd -q --zone=trusted --add-source=10.8.0.0/24<br>firewall-cmd -q --permanent --add-port=&quot;$port&quot;/&quot;$protocol&quot;<br>firewall-cmd -q --permanent --zone=trusted --add-source=10.8.0.0/24<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Set NAT <span class="hljs-keyword">for</span> the VPN subnet</span><br>firewall-cmd -q --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>firewall-cmd -q --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>if [[ -n &quot;$ip6&quot; ]]; then<br>firewall-cmd -q --zone=trusted --add-source=fddd:1194:1194:1194::/64<br>firewall-cmd -q --permanent --zone=trusted --add-source=fddd:1194:1194:1194::/64<br>firewall-cmd -q --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>firewall-cmd -q --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>fi<br>else<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Create a service to <span class="hljs-built_in">set</span> up persistent iptables rules</span><br>iptables_path=$(command -v iptables)<br>ip6tables_path=$(command -v ip6tables)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">nf_tables is not available as standard <span class="hljs-keyword">in</span> OVZ kernels. So use iptables-legacy</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">if</span> we are <span class="hljs-keyword">in</span> OVZ, with a nf_tables backend and iptables-legacy is available.</span><br>if [[ $(systemd-detect-virt) == &quot;openvz&quot; ]] &amp;&amp; readlink -f &quot;$(command -v iptables)&quot; | grep -q &quot;nft&quot; &amp;&amp; hash iptables-legacy 2&gt;/dev/null; then<br>iptables_path=$(command -v iptables-legacy)<br>ip6tables_path=$(command -v ip6tables-legacy)<br>fi<br>echo &quot;[Unit]<br>Before=network.target<br>[Service]<br>Type=oneshot<br>ExecStart=$iptables_path -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>ExecStart=$iptables_path -I INPUT -p $protocol --dport $port -j ACCEPT<br>ExecStart=$iptables_path -I FORWARD -s 10.8.0.0/24 -j ACCEPT<br>ExecStart=$iptables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT<br>ExecStop=$iptables_path -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>ExecStop=$iptables_path -D INPUT -p $protocol --dport $port -j ACCEPT<br>ExecStop=$iptables_path -D FORWARD -s 10.8.0.0/24 -j ACCEPT<br>ExecStop=$iptables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot; &gt; /etc/systemd/system/openvpn-iptables.service<br>if [[ -n &quot;$ip6&quot; ]]; then<br>echo &quot;ExecStart=$ip6tables_path -t nat -A POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>ExecStart=$ip6tables_path -I FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT<br>ExecStart=$ip6tables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT<br>ExecStop=$ip6tables_path -t nat -D POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>ExecStop=$ip6tables_path -D FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT<br>ExecStop=$ip6tables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot; &gt;&gt; /etc/systemd/system/openvpn-iptables.service<br>fi<br>echo &quot;RemainAfterExit=yes<br>[Install]<br>WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/openvpn-iptables.service<br>(<br>set -x<br>systemctl enable --now openvpn-iptables.service &gt;/dev/null 2&gt;&amp;1<br>)<br>fi<br>&#125;<br><br>remove_firewall_rules() &#123;<br>port=$(grep &#x27;^port &#x27; &quot;$OVPN_CONF&quot; | cut -d &quot; &quot; -f 2)<br>protocol=$(grep &#x27;^proto &#x27; &quot;$OVPN_CONF&quot; | cut -d &quot; &quot; -f 2)<br>if systemctl is-active --quiet firewalld.service; then<br>ip=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep &#x27;\-s 10.8.0.0/24 &#x27;&quot;&#x27;&quot;&#x27;!&#x27;&quot;&#x27;&quot;&#x27; -d 10.8.0.0/24&#x27; | grep -oE &#x27;[^ ]+$&#x27;)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Using both permanent and not permanent rules to avoid a firewalld reload.</span><br>firewall-cmd -q --remove-port=&quot;$port&quot;/&quot;$protocol&quot;<br>firewall-cmd -q --zone=trusted --remove-source=10.8.0.0/24<br>firewall-cmd -q --permanent --remove-port=&quot;$port&quot;/&quot;$protocol&quot;<br>firewall-cmd -q --permanent --zone=trusted --remove-source=10.8.0.0/24<br>firewall-cmd -q --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>firewall-cmd -q --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>if grep -qs &quot;server-ipv6&quot; &quot;$OVPN_CONF&quot;; then<br>ip6=$(firewall-cmd --direct --get-rules ipv6 nat POSTROUTING | grep &#x27;\-s fddd:1194:1194:1194::/64 &#x27;&quot;&#x27;&quot;&#x27;!&#x27;&quot;&#x27;&quot;&#x27; -d fddd:1194:1194:1194::/64&#x27; | grep -oE &#x27;[^ ]+$&#x27;)<br>firewall-cmd -q --zone=trusted --remove-source=fddd:1194:1194:1194::/64<br>firewall-cmd -q --permanent --zone=trusted --remove-source=fddd:1194:1194:1194::/64<br>firewall-cmd -q --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>firewall-cmd -q --permanent --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>fi<br>else<br>systemctl disable --now openvpn-iptables.service<br>rm -f /etc/systemd/system/openvpn-iptables.service<br>fi<br>if sestatus 2&gt;/dev/null | grep &quot;Current mode&quot; | grep -q &quot;enforcing&quot; &amp;&amp; [[ &quot;$port&quot; != 1194 ]]; then<br>semanage port -d -t openvpn_port_t -p &quot;$protocol&quot; &quot;$port&quot;<br>fi<br>&#125;<br><br>install_easyrsa() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Get easy-rsa</span><br>easy_rsa_url=&#x27;https://github.com/OpenVPN/easy-rsa/releases/download/v3.2.0/EasyRSA-3.2.0.tgz&#x27;<br>mkdir -p /etc/openvpn/server/easy-rsa/<br>&#123; wget -t 3 -T 30 -qO- &quot;$easy_rsa_url&quot; 2&gt;/dev/null || curl -m 30 -sL &quot;$easy_rsa_url&quot; ; &#125; | tar xz -C /etc/openvpn/server/easy-rsa/ --strip-components 1<br>if [ ! -f /etc/openvpn/server/easy-rsa/easyrsa ]; then<br>exiterr &quot;Failed to download EasyRSA from $easy_rsa_url.&quot;<br>fi<br>chown -R root:root /etc/openvpn/server/easy-rsa/<br>&#125;<br><br>create_pki_and_certs() &#123;<br>cd /etc/openvpn/server/easy-rsa/ || exit 1<br>(<br>set -x<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Create the PKI, <span class="hljs-built_in">set</span> up the CA and the server and client certificates</span><br>./easyrsa --batch init-pki &gt;/dev/null<br>./easyrsa --batch build-ca nopass &gt;/dev/null 2&gt;&amp;1<br>./easyrsa --batch --days=3650 build-server-full server nopass &gt;/dev/null 2&gt;&amp;1<br>./easyrsa --batch --days=3650 build-client-full &quot;$client&quot; nopass &gt;/dev/null 2&gt;&amp;1<br>./easyrsa --batch --days=3650 gen-crl &gt;/dev/null 2&gt;&amp;1<br>)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Move the stuff we need</span><br>cp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server<br><span class="hljs-meta prompt_"># </span><span class="language-bash">CRL is <span class="hljs-built_in">read</span> with each client connection, <span class="hljs-keyword">while</span> OpenVPN is dropped to nobody</span><br>chown nobody:&quot;$group_name&quot; /etc/openvpn/server/crl.pem<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Without +x <span class="hljs-keyword">in</span> the directory, OpenVPN can<span class="hljs-string">&#x27;t run a stat() on the CRL file</span></span><br>chmod o+x /etc/openvpn/server/<br>(<br>set -x<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Generate key for tls-crypt</span></span><br>openvpn --genkey --secret /etc/openvpn/server/tc.key &gt;/dev/null<br>)<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Create the DH parameters file using the predefined ffdhe2048 group</span></span><br>echo &#x27;-----BEGIN DH PARAMETERS-----<br>MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz<br>+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a<br>87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7<br>YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi<br>7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD<br>ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==<br>-----END DH PARAMETERS-----&#x27; &gt; /etc/openvpn/server/dh.pem<br>&#125;<br><br>create_dns_config() &#123;<br>case &quot;$dns&quot; in<br>1)<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Locate the proper resolv.conf</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Needed for systems running systemd-resolved</span></span><br>if grep &#x27;^nameserver&#x27; &quot;/etc/resolv.conf&quot; | grep -qv &#x27;127.0.0.53&#x27; ; then<br>resolv_conf=&quot;/etc/resolv.conf&quot;<br>else<br>resolv_conf=&quot;/run/systemd/resolve/resolv.conf&quot;<br>fi<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Obtain the resolvers from resolv.conf and use them for OpenVPN</span></span><br>grep -v &#x27;^#\|^;&#x27; &quot;$resolv_conf&quot; | grep &#x27;^nameserver&#x27; | grep -v &#x27;127.0.0.53&#x27; | grep -oE &#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | while read line; do<br>echo &quot;push \&quot;dhcp-option DNS $line\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>done<br>;;<br>2|&quot;&quot;)<br>echo &#x27;push &quot;dhcp-option DNS 8.8.8.8&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;push &quot;dhcp-option DNS 8.8.4.4&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>;;<br>3)<br>echo &#x27;push &quot;dhcp-option DNS 1.1.1.1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;push &quot;dhcp-option DNS 1.0.0.1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>;;<br>4)<br>echo &#x27;push &quot;dhcp-option DNS 208.67.222.222&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;push &quot;dhcp-option DNS 208.67.220.220&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>;;<br>5)<br>echo &#x27;push &quot;dhcp-option DNS 9.9.9.9&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;push &quot;dhcp-option DNS 149.112.112.112&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>;;<br>6)<br>echo &#x27;push &quot;dhcp-option DNS 94.140.14.14&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;push &quot;dhcp-option DNS 94.140.15.15&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>;;<br>7)<br>echo &quot;push \&quot;dhcp-option DNS $dns1\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>if [ -n &quot;$dns2&quot; ]; then<br>echo &quot;push \&quot;dhcp-option DNS $dns2\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>fi<br>;;<br>esac<br>&#125;<br><br>create_server_config() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Generate server.conf</span></span><br>echo &quot;local $ip<br>port $port<br>proto $protocol<br>dev tun<br>ca ca.crt<br>cert server.crt<br>key server.key<br>dh dh.pem<br>auth SHA256<br>tls-crypt tc.key<br>topology subnet<br>server 10.8.0.0 255.255.255.0&quot; &gt; &quot;$OVPN_CONF&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">IPv6</span></span><br>if [[ -z &quot;$ip6&quot; ]]; then<br>echo &#x27;push &quot;block-ipv6&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;push &quot;ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>else<br>echo &#x27;server-ipv6 fddd:1194:1194:1194::/64&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>fi<br>echo &#x27;push &quot;redirect-gateway def1 ipv6 bypass-dhcp&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &#x27;ifconfig-pool-persist ipp.txt&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>create_dns_config<br>echo &#x27;push &quot;block-outside-dns&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>echo &quot;keepalive 10 120<br>cipher AES-128-GCM<br>user nobody<br>group $group_name<br>persist-key<br>persist-tun<br>verb 3<br>crl-verify crl.pem&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>if [[ &quot;$protocol&quot; = &quot;udp&quot; ]]; then<br>echo &quot;explicit-exit-notify&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>fi<br>&#125;<br><br>get_export_dir() &#123;<br>export_to_home_dir=0<br>export_dir=~/<br>if [ -n &quot;$SUDO_USER&quot; ] &amp;&amp; getent group &quot;$SUDO_USER&quot; &gt;/dev/null 2&gt;&amp;1; then<br>user_home_dir=$(getent passwd &quot;$SUDO_USER&quot; 2&gt;/dev/null | cut -d: -f6)<br>if [ -d &quot;$user_home_dir&quot; ] &amp;&amp; [ &quot;$user_home_dir&quot; != &quot;/&quot; ]; then<br>export_dir=&quot;$user_home_dir/&quot;<br>export_to_home_dir=1<br>fi<br>fi<br>&#125;<br><br>new_client() &#123;<br>get_export_dir<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Generates the custom client.ovpn</span></span><br>&#123;<br>cat /etc/openvpn/server/client-common.txt<br>echo &quot;&lt;ca&gt;&quot;<br>cat /etc/openvpn/server/easy-rsa/pki/ca.crt<br>echo &quot;&lt;/ca&gt;&quot;<br>echo &quot;&lt;cert&gt;&quot;<br>sed -ne &#x27;/BEGIN CERTIFICATE/,$ p&#x27; /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt<br>echo &quot;&lt;/cert&gt;&quot;<br>echo &quot;&lt;key&gt;&quot;<br>cat /etc/openvpn/server/easy-rsa/pki/private/&quot;$client&quot;.key<br>echo &quot;&lt;/key&gt;&quot;<br>echo &quot;&lt;tls-crypt&gt;&quot;<br>sed -ne &#x27;/BEGIN OpenVPN Static key/,$ p&#x27; /etc/openvpn/server/tc.key<br>echo &quot;&lt;/tls-crypt&gt;&quot;<br>&#125; &gt; &quot;$export_dir$client&quot;.ovpn<br>if [ &quot;$export_to_home_dir&quot; = 1 ]; then<br>chown &quot;$SUDO_USER:$SUDO_USER&quot; &quot;$export_dir$client&quot;.ovpn<br>fi<br>chmod 600 &quot;$export_dir$client&quot;.ovpn<br>&#125;<br><br>update_sysctl() &#123;<br>mkdir -p /etc/sysctl.d<br>conf_fwd=&quot;/etc/sysctl.d/99-openvpn-forward.conf&quot;<br>conf_opt=&quot;/etc/sysctl.d/99-openvpn-optimize.conf&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Enable net.ipv4.ip_forward for the system</span></span><br>echo &#x27;net.ipv4.ip_forward=1&#x27; &gt; &quot;$conf_fwd&quot;<br>if [[ -n &quot;$ip6&quot; ]]; then<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Enable net.ipv6.conf.all.forwarding for the system</span></span><br>echo &quot;net.ipv6.conf.all.forwarding=1&quot; &gt;&gt; &quot;$conf_fwd&quot;<br>fi<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Optimize sysctl settings such as TCP buffer sizes</span></span><br>base_url=&quot;https://github.com/hwdsl2/vpn-extras/releases/download/v1.0.0&quot;<br>conf_url=&quot;$base_url/sysctl-ovpn-$os&quot;<br>[ &quot;$auto&quot; != 0 ] &amp;&amp; conf_url=&quot;$&#123;conf_url&#125;-auto&quot;<br>wget -t 3 -T 30 -q -O &quot;$conf_opt&quot; &quot;$conf_url&quot; 2&gt;/dev/null \<br>|| curl -m 30 -fsL &quot;$conf_url&quot; -o &quot;$conf_opt&quot; 2&gt;/dev/null \<br>|| &#123; /bin/rm -f &quot;$conf_opt&quot;; touch &quot;$conf_opt&quot;; &#125;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Enable TCP BBR congestion control if kernel version &gt;= 4.20</span></span><br>if modprobe -q tcp_bbr \<br>&amp;&amp; printf &#x27;%s\n%s&#x27; &quot;4.20&quot; &quot;$(uname -r)&quot; | sort -C -V \<br>&amp;&amp; [ -f /proc/sys/net/ipv4/tcp_congestion_control ]; then<br>cat &gt;&gt; &quot;$conf_opt&quot; &lt;&lt;&#x27;EOF&#x27;<br>net.core.default_qdisc = fq<br>net.ipv4.tcp_congestion_control = bbr<br>EOF<br>fi<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Apply sysctl settings</span></span><br>sysctl -e -q -p &quot;$conf_fwd&quot;<br>sysctl -e -q -p &quot;$conf_opt&quot;<br>&#125;<br><br>update_rclocal() &#123;<br>ipt_cmd=&quot;systemctl restart openvpn-iptables.service&quot;<br>if ! grep -qs &quot;$ipt_cmd&quot; /etc/rc.local; then<br>if [ ! -f /etc/rc.local ]; then<br>echo &#x27;#!/bin/sh&#x27; &gt; /etc/rc.local<br>else<br>if [ &quot;$os&quot; = &quot;ubuntu&quot; ] || [ &quot;$os&quot; = &quot;debian&quot; ]; then<br>sed --follow-symlinks -i &#x27;/^exit 0/d&#x27; /etc/rc.local<br>fi<br>fi<br>cat &gt;&gt; /etc/rc.local &lt;&lt;EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$</span><span class="language-bash"><span class="hljs-string">ipt_cmd</span></span><br>EOF<br>if [ &quot;$os&quot; = &quot;ubuntu&quot; ] || [ &quot;$os&quot; = &quot;debian&quot; ]; then<br>echo &quot;exit 0&quot; &gt;&gt; /etc/rc.local<br>fi<br>chmod +x /etc/rc.local<br>fi<br>&#125;<br><br>update_selinux() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">If SELinux is enabled and a custom port was selected, we need this</span></span><br>if sestatus 2&gt;/dev/null | grep &quot;Current mode&quot; | grep -q &quot;enforcing&quot; &amp;&amp; [[ &quot;$port&quot; != 1194 ]]; then<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Install semanage if not already present</span></span><br>if ! hash semanage 2&gt;/dev/null; then<br>if [[ &quot;$os_version&quot; -eq 7 ]]; then<br># Centos 7<br>(<br>set -x<br>yum -y -q install policycoreutils-python &gt;/dev/null<br>) || exiterr3<br>else<br># CentOS 8/9 or Fedora<br>(<br>set -x<br>dnf install -y policycoreutils-python-utils &gt;/dev/null<br>) || exiterr &quot;&#x27;dnf install&#x27; failed.&quot;<br>fi<br>fi<br>semanage port -a -t openvpn_port_t -p &quot;$protocol&quot; &quot;$port&quot;<br>fi<br>&#125;<br><br>create_client_common() &#123;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">If the server is behind NAT, use the correct IP address</span></span><br>[[ -n &quot;$public_ip&quot; ]] &amp;&amp; ip=&quot;$public_ip&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">client-common.txt is created so we have a template to add further users later</span></span><br>echo &quot;client<br>dev tun<br>proto $protocol<br>remote $ip $port<br>resolv-retry infinite<br>nobind<br>persist-key<br>persist-tun<br>remote-cert-tls server<br>auth SHA256<br>cipher AES-128-GCM<br>ignore-unknown-option block-outside-dns block-ipv6<br>verb 3&quot; &gt; /etc/openvpn/server/client-common.txt<br>&#125;<br><br>start_openvpn_service() &#123;<br>if [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>(<br>set -x<br>systemctl enable --now openvpn-server@server.service &gt;/dev/null 2&gt;&amp;1<br>)<br>else<br>ln -s /etc/openvpn/server/* /etc/openvpn &gt;/dev/null 2&gt;&amp;1<br>(<br>set -x<br>systemctl enable --now openvpn@server.service &gt;/dev/null 2&gt;&amp;1<br>)<br>fi<br>&#125;<br><br>finish_setup() &#123;<br>echo<br>echo &quot;Finished!&quot;<br>echo<br>echo &quot;The client configuration is available in: $export_dir$client.ovpn&quot;<br>echo &quot;New clients can be added by running this script again.&quot;<br>&#125;<br><br>select_menu_option() &#123;<br>echo<br>echo &quot;OpenVPN is already installed.&quot;<br>echo<br>echo &quot;Select an option:&quot;<br>echo &quot;   1) Add a new client&quot;<br>echo &quot;   2) Export config for an existing client&quot;<br>echo &quot;   3) List existing clients&quot;<br>echo &quot;   4) Revoke an existing client&quot;<br>echo &quot;   5) Remove OpenVPN&quot;<br>echo &quot;   6) Exit&quot;<br>read -rp &quot;Option: &quot; option<br>until [[ &quot;$option&quot; =~ ^[1-6]$ ]]; do<br>echo &quot;$option: invalid selection.&quot;<br>read -rp &quot;Option: &quot; option<br>done<br>&#125;<br><br>show_clients() &#123;<br>tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep &quot;^V&quot; | cut -d &#x27;=&#x27; -f 2 | nl -s &#x27;) &#x27;<br>&#125;<br><br>enter_client_name() &#123;<br>echo<br>echo &quot;Provide a name for the client:&quot;<br>read -rp &quot;Name: &quot; unsanitized_client<br>[ -z &quot;$unsanitized_client&quot; ] &amp;&amp; abort_and_exit<br>set_client_name<br>while [[ -z &quot;$client&quot; || -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]]; do<br>if [ -z &quot;$client&quot; ]; then<br>echo &quot;Invalid client name. Use one word only, no special characters except &#x27;-&#x27; and &#x27;_&#x27;.&quot;<br>else<br>echo &quot;$client: invalid name. Client already exists.&quot;<br>fi<br>read -rp &quot;Name: &quot; unsanitized_client<br>[ -z &quot;$unsanitized_client&quot; ] &amp;&amp; abort_and_exit<br>set_client_name<br>done<br>&#125;<br><br>build_client_config() &#123;<br>cd /etc/openvpn/server/easy-rsa/ || exit 1<br>(<br>set -x<br>./easyrsa --batch --days=3650 build-client-full &quot;$client&quot; nopass &gt;/dev/null 2&gt;&amp;1<br>)<br>&#125;<br><br>print_client_action() &#123;<br>echo<br>echo &quot;$client $1. Configuration available in: $export_dir$client.ovpn&quot;<br>&#125;<br><br>print_check_clients() &#123;<br>echo<br>echo &quot;Checking for existing client(s)...&quot;<br>&#125;<br><br>check_clients() &#123;<br>num_of_clients=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep -c &quot;^V&quot;)<br>if [[ &quot;$num_of_clients&quot; = 0 ]]; then<br>echo<br>echo &quot;There are no existing clients!&quot;<br>exit 1<br>fi<br>&#125;<br><br>print_client_total() &#123;<br>if [ &quot;$num_of_clients&quot; = 1 ]; then<br>printf &#x27;\n%s\n&#x27; &quot;Total: 1 client&quot;<br>elif [ -n &quot;$num_of_clients&quot; ]; then<br>printf &#x27;\n%s\n&#x27; &quot;Total: $num_of_clients clients&quot;<br>fi<br>&#125;<br><br>select_client_to() &#123;<br>echo<br>echo &quot;Select the client to $1:&quot;<br>show_clients<br>read -rp &quot;Client: &quot; client_num<br>[ -z &quot;$client_num&quot; ] &amp;&amp; abort_and_exit<br>until [[ &quot;$client_num&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$client_num&quot; -le &quot;$num_of_clients&quot; ]]; do<br>echo &quot;$client_num: invalid selection.&quot;<br>read -rp &quot;Client: &quot; client_num<br>[ -z &quot;$client_num&quot; ] &amp;&amp; abort_and_exit<br>done<br>client=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep &quot;^V&quot; | cut -d &#x27;=&#x27; -f 2 | sed -n &quot;$client_num&quot;p)<br>&#125;<br><br>confirm_revoke_client() &#123;<br>if [ &quot;$assume_yes&quot; != 1 ]; then<br>echo<br>read -rp &quot;Confirm $client revocation? [y/N]: &quot; revoke<br>until [[ &quot;$revoke&quot; =~ ^[yYnN]*$ ]]; do<br>echo &quot;$revoke: invalid selection.&quot;<br>read -rp &quot;Confirm $client revocation? [y/N]: &quot; revoke<br>done<br>else<br>revoke=y<br>fi<br>&#125;<br><br>print_revoke_client() &#123;<br>echo<br>echo &quot;Revoking $client...&quot;<br>&#125;<br><br>remove_client_conf() &#123;<br>get_export_dir<br>ovpn_file=&quot;$export_dir$client.ovpn&quot;<br>if [ -f &quot;$ovpn_file&quot; ]; then<br>echo &quot;Removing $ovpn_file...&quot;<br>rm -f &quot;$ovpn_file&quot;<br>fi<br>&#125;<br><br>revoke_client_ovpn() &#123;<br>cd /etc/openvpn/server/easy-rsa/ || exit 1<br>(<br>set -x<br>./easyrsa --batch revoke &quot;$client&quot; &gt;/dev/null 2&gt;&amp;1<br>./easyrsa --batch --days=3650 gen-crl &gt;/dev/null 2&gt;&amp;1<br>)<br>rm -f /etc/openvpn/server/crl.pem<br>cp /etc/openvpn/server/easy-rsa/pki/crl.pem /etc/openvpn/server/crl.pem<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">CRL is read with each client connection, when OpenVPN is dropped to nobody</span></span><br>chown nobody:&quot;$group_name&quot; /etc/openvpn/server/crl.pem<br>remove_client_conf<br>&#125;<br><br>print_client_revoked() &#123;<br>echo<br>echo &quot;$client revoked!&quot;<br>&#125;<br><br>print_client_revocation_aborted() &#123;<br>echo<br>echo &quot;$client revocation aborted!&quot;<br>&#125;<br><br>confirm_remove_ovpn() &#123;<br>if [ &quot;$assume_yes&quot; != 1 ]; then<br>echo<br>read -rp &quot;Confirm OpenVPN removal? [y/N]: &quot; remove<br>until [[ &quot;$remove&quot; =~ ^[yYnN]*$ ]]; do<br>echo &quot;$remove: invalid selection.&quot;<br>read -rp &quot;Confirm OpenVPN removal? [y/N]: &quot; remove<br>done<br>else<br>remove=y<br>fi<br>&#125;<br><br>print_remove_ovpn() &#123;<br>echo<br>echo &quot;Removing OpenVPN, please wait...&quot;<br>&#125;<br><br>disable_ovpn_service() &#123;<br>if [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>systemctl disable --now openvpn-server@server.service<br>else<br>systemctl disable --now openvpn@server.service<br>fi<br>rm -f /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf<br>&#125;<br><br>remove_sysctl_rules() &#123;<br>rm -f /etc/sysctl.d/99-openvpn-forward.conf /etc/sysctl.d/99-openvpn-optimize.conf<br>if [ ! -f /usr/bin/wg-quick ] &amp;&amp; [ ! -f /usr/sbin/ipsec ] \<br>&amp;&amp; [ ! -f /usr/local/sbin/ipsec ]; then<br>echo 0 &gt; /proc/sys/net/ipv4/ip_forward<br>echo 0 &gt; /proc/sys/net/ipv6/conf/all/forwarding<br>fi<br>&#125;<br><br>remove_rclocal_rules() &#123;<br>ipt_cmd=&quot;systemctl restart openvpn-iptables.service&quot;<br>if grep -qs &quot;$ipt_cmd&quot; /etc/rc.local; then<br>sed --follow-symlinks -i &quot;/^$ipt_cmd/d&quot; /etc/rc.local<br>fi<br>&#125;<br><br>print_ovpn_removed() &#123;<br>echo<br>echo &quot;OpenVPN removed!&quot;<br>&#125;<br><br>print_ovpn_removal_aborted() &#123;<br>echo<br>echo &quot;OpenVPN removal aborted!&quot;<br>&#125;<br><br>ovpnsetup() &#123;<br><br>export PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;<br><br>check_root<br>check_shell<br>check_kernel<br>check_os<br>check_os_ver<br>check_tun<br><br>OVPN_CONF=&quot;/etc/openvpn/server/server.conf&quot;<br><br>auto=0<br>assume_yes=0<br>add_client=0<br>export_client=0<br>list_clients=0<br>revoke_client=0<br>remove_ovpn=0<br><br>parse_args &quot;$@&quot;<br>check_args<br><br>if [ &quot;$add_client&quot; = 1 ]; then<br>show_header<br>echo<br>build_client_config<br>new_client<br>print_client_action added<br>exit 0<br>fi<br><br>if [ &quot;$export_client&quot; = 1 ]; then<br>show_header<br>new_client<br>print_client_action exported<br>exit 0<br>fi<br><br>if [ &quot;$list_clients&quot; = 1 ]; then<br>show_header<br>print_check_clients<br>check_clients<br>echo<br>show_clients<br>print_client_total<br>exit 0<br>fi<br><br>if [ &quot;$revoke_client&quot; = 1 ]; then<br>show_header<br>confirm_revoke_client<br>if [[ &quot;$revoke&quot; =~ ^[yY]$ ]]; then<br>print_revoke_client<br>revoke_client_ovpn<br>print_client_revoked<br>exit 0<br>else<br>print_client_revocation_aborted<br>exit 1<br>fi<br>fi<br><br>if [ &quot;$remove_ovpn&quot; = 1 ]; then<br>show_header<br>confirm_remove_ovpn<br>if [[ &quot;$remove&quot; =~ ^[yY]$ ]]; then<br>print_remove_ovpn<br>remove_firewall_rules<br>disable_ovpn_service<br>remove_sysctl_rules<br>remove_rclocal_rules<br>remove_pkgs<br>print_ovpn_removed<br>exit 0<br>else<br>print_ovpn_removal_aborted<br>exit 1<br>fi<br>fi<br><br>if [[ ! -e &quot;$OVPN_CONF&quot; ]]; then<br>check_nftables<br>install_wget<br>install_iproute<br>show_welcome<br>public_ip=&quot;&quot;<br>if [ &quot;$auto&quot; = 0 ]; then<br>enter_server_address<br>else<br>detect_ip<br>check_nat_ip<br>fi<br>show_config<br>detect_ipv6<br>select_protocol<br>select_port<br>select_dns<br>enter_first_client_name<br>show_setup_ready<br>check_firewall<br>confirm_setup<br>show_start_setup<br>disable_limitnproc<br>install_pkgs<br>install_easyrsa<br>create_pki_and_certs<br>create_server_config<br>update_sysctl<br>create_firewall_rules<br>if [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>update_rclocal<br>fi<br>update_selinux<br>create_client_common<br>start_openvpn_service<br>new_client<br>finish_setup<br>else<br>show_header<br>select_menu_option<br>case &quot;$option&quot; in<br>1)<br>enter_client_name<br>build_client_config<br>new_client<br>print_client_action added<br>exit 0<br>;;<br>2)<br>check_clients<br>select_client_to export<br>new_client<br>print_client_action exported<br>exit 0<br>;;<br>3)<br>print_check_clients<br>check_clients<br>echo<br>show_clients<br>print_client_total<br>exit 0<br>;;<br>4)<br>check_clients<br>select_client_to revoke<br>confirm_revoke_client<br>if [[ &quot;$revoke&quot; =~ ^[yY]$ ]]; then<br>print_revoke_client<br>revoke_client_ovpn<br>print_client_revoked<br>exit 0<br>else<br>print_client_revocation_aborted<br>exit 1<br>fi<br>;;<br>5)<br>confirm_remove_ovpn<br>if [[ &quot;$remove&quot; =~ ^[yY]$ ]]; then<br>print_remove_ovpn<br>remove_firewall_rules<br>disable_ovpn_service<br>remove_sysctl_rules<br>remove_rclocal_rules<br>remove_pkgs<br>print_ovpn_removed<br>exit 0<br>else<br>print_ovpn_removal_aborted<br>exit 1<br>fi<br>;;<br>6)<br>exit 0<br>;;<br>esac<br>fi<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string"># Defer setup until we have the complete script</span></span><br>ovpnsetup &quot;$@&quot;<br><br>exit 0<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用图形化对linux磁盘进行扩容</title>
    <link href="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/"/>
    <url>/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806195901.png" class alt="微信截图_20240806195901.png"><p>磁盘空间不足的提示。<br>我就在终端输入df -h查看了一下磁盘的使用情况。<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1        48G   46G   47M  100% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>tmpfs           2.7G   52K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged</p><p>发现&#x2F;dev&#x2F;sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。<br>网上各种找方法….<br>网上一堆复制粘贴的坑逼教程可把我给坑惨了。<br>最后找到了两篇文章综合起来才成功。<br>写出来的目的仅仅为了方便记忆，那么就来说说吧。<br>第一步:<br>使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200518.png" class alt="微信截图_20240806200518.png"><p>第二步:<br>下载Gparted镜像文件。<br><a href="https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1">https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1</a></p><p>然后在虚拟机的设置–CD&#x2F;DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200410.png" class alt="微信截图_20240806200410.png"><p>第三步:<br>启动BIOS方法:<br>用记事本打开ubantu.vmx文件，在第一行添加这段代码<br>bios.forceSetupOnce &#x3D; “TRUE”</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/img.png" class alt="img.png"><p>保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。</p><p>进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。</p><p>开机后即可进入这个界面。</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200751.png" class alt="微信截图_20240806200751.png"><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200831.png" class alt="微信截图_20240806200831.png"><p>输入26选择简体中文，敲回车</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200853.png" class alt="微信截图_20240806200853.png"><p>输入0，敲回车</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200913.png" class alt="微信截图_20240806200913.png"><p>进入Gparted的界面会自动弹出Gparted的分区界面。</p><img src="/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200924.png" class alt="微信截图_20240806200924.png"><p>依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，<br>将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。<br>再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出<br>然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功</p><p>└─# df -h<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1       144G   34G  104G   25% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged<br>tmpfs           2.7G   56K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782&#x2F;merged</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>对linux磁盘进行无损扩容</title>
    <link href="/2024/08/05/%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%97%A0%E6%8D%9F%E6%89%A9%E5%AE%B9/"/>
    <url>/2024/08/05/%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%97%A0%E6%8D%9F%E6%89%A9%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<p>执行 lsblk 命令得到的数据如下<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0  150G  0 disk <br>├─sda1   8:1    0   49G  0 part /<br>├─sda2   8:2    0    1K  0 part <br>└─sda5   8:5    0  975M  0 part [SWAP]<br>sr0     11:0    1  4.6G  0 rom  <br></code></pre></td></tr></table></figure><br>此时，想将sda1从49G扩容到150G。进行无损扩展 <code>/dev/sda1</code> 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 <code>fdisk</code> 或 <code>parted</code> 工具来调整分区大小，然后扩展文件系统。</p><h3 id="无损扩展分区的步骤"><a href="#无损扩展分区的步骤" class="headerlink" title="无损扩展分区的步骤"></a>无损扩展分区的步骤</h3><h4 id="1-备份数据"><a href="#1-备份数据" class="headerlink" title="1. 备份数据"></a>1. <strong>备份数据</strong></h4><p>在进行任何磁盘操作之前，务必备份重要数据以防万一。</p><h4 id="2-使用-parted-调整分区大小"><a href="#2-使用-parted-调整分区大小" class="headerlink" title="2. 使用 parted 调整分区大小"></a>2. <strong>使用 <code>parted</code> 调整分区大小</strong></h4><p>假设现有的 <code>/dev/sda1</code> 是 <code>ext4</code> 文件系统。</p><ol><li><p><strong>查看当前磁盘布局</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk<br>sudo fdisk -l /dev/sda<br></code></pre></td></tr></table></figure></li><li><p><strong>调整分区大小</strong></p><p>使用 <code>parted</code> 调整分区大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo parted /dev/sda<br></code></pre></td></tr></table></figure><p>在 <code>parted</code> 交互界面中执行以下步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(parted) <span class="hljs-built_in">print</span><br></code></pre></td></tr></table></figure><p>确认分区表，并记下 <code>/dev/sda1</code> 的起始位置（例如 <code>2048s</code>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(parted) resizepart 1 150GB<br></code></pre></td></tr></table></figure><p>这会扩展分区1到150GB。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(parted) quit<br></code></pre></td></tr></table></figure></li></ol><h4 id="3-更新分区表"><a href="#3-更新分区表" class="headerlink" title="3. 更新分区表"></a>3. <strong>更新分区表</strong></h4><p>有时，系统需要重新加载分区表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo partprobe /dev/sda<br></code></pre></td></tr></table></figure><h4 id="4-扩展文件系统"><a href="#4-扩展文件系统" class="headerlink" title="4. 扩展文件系统"></a>4. <strong>扩展文件系统</strong></h4><p>根据你的文件系统类型，执行以下步骤来扩展文件系统。</p><h5 id="对于-ext4-文件系统："><a href="#对于-ext4-文件系统：" class="headerlink" title="对于 ext4 文件系统："></a>对于 <code>ext4</code> 文件系统：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo resize2fs /dev/sda1<br></code></pre></td></tr></table></figure><h5 id="对于-xfs-文件系统："><a href="#对于-xfs-文件系统：" class="headerlink" title="对于 xfs 文件系统："></a>对于 <code>xfs</code> 文件系统：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo xfs_growfs /dev/sda1<br></code></pre></td></tr></table></figure><h4 id="5-验证扩展是否成功"><a href="#5-验证扩展是否成功" class="headerlink" title="5. 验证扩展是否成功"></a>5. <strong>验证扩展是否成功</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><h3 id="示例步骤"><a href="#示例步骤" class="headerlink" title="示例步骤"></a>示例步骤</h3><p>完整的命令和步骤如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前磁盘布局</span><br>lsblk<br>sudo fdisk -l /dev/sda<br><br><span class="hljs-comment"># 调整分区大小</span><br>sudo parted /dev/sda<br><br><span class="hljs-comment"># 在 parted 交互界面中</span><br>(parted) <span class="hljs-built_in">print</span><br>(parted) resizepart 1 150GB<br>(parted) quit<br><br><span class="hljs-comment"># 更新分区表</span><br>sudo partprobe /dev/sda<br><br><span class="hljs-comment"># 扩展文件系统（假设是 ext4 文件系统）</span><br>sudo resize2fs /dev/sda1<br><br><span class="hljs-comment"># 验证扩展是否成功</span><br><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>确保你的 <code>/dev/sda1</code> 分区后面有足够的未分配空间来扩展到 150GB。</li><li>在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。</li><li>如果你无法进入系统，可以通过 live CD&#x2F;USB 启动系统并执行这些操作。</li></ul><p>这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>解读redis分布式锁核心逻辑</title>
    <link href="/2024/07/30/%E8%A7%A3%E8%AF%BBredis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91/"/>
    <url>/2024/07/30/%E8%A7%A3%E8%AF%BBredis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91/</url>
    
    <content type="html"><![CDATA[   <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">local</span> insertable = <span class="hljs-literal">false</span>; <span class="hljs-keyword">local</span> value = redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">if</span> value == <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> insertable = <span class="hljs-literal">true</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">local</span> t, val = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&#x27;dLc0&#x27;</span>, value); <span class="hljs-keyword">local</span> expireDate = <span class="hljs-number">92233720368547758</span>; <span class="hljs-keyword">local</span> expireDateScore = redis.call(<span class="hljs-string">&#x27;zscore&#x27;</span>, KEYS[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">if</span> expireDateScore ~= <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> expireDate = <span class="hljs-built_in">tonumber</span>(expireDateScore) <span class="hljs-keyword">end</span>; <span class="hljs-keyword">if</span> t ~= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> <span class="hljs-keyword">local</span> expireIdle = redis.call(<span class="hljs-string">&#x27;zscore&#x27;</span>, KEYS[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">if</span> expireIdle ~= <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> expireDate = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">min</span>(expireDate, <span class="hljs-built_in">tonumber</span>(expireIdle)) <span class="hljs-keyword">end</span>; <span class="hljs-keyword">end</span>; <span class="hljs-keyword">if</span> expireDate &lt;= <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">1</span>]) <span class="hljs-keyword">then</span> insertable = <span class="hljs-literal">true</span>; <span class="hljs-keyword">end</span>; <span class="hljs-keyword">end</span>; <span class="hljs-keyword">if</span> insertable == <span class="hljs-literal">true</span> <span class="hljs-keyword">then</span> <span class="hljs-keyword">if</span> <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">2</span>]) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, KEYS[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">else</span> redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">end</span>; <span class="hljs-keyword">if</span> <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">3</span>]) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, KEYS[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">else</span> redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">end</span>; <span class="hljs-keyword">local</span> maxSize = <span class="hljs-built_in">tonumber</span>(redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">7</span>], <span class="hljs-string">&#x27;max-size&#x27;</span>)); <span class="hljs-keyword">if</span> maxSize ~= <span class="hljs-literal">nil</span> <span class="hljs-keyword">and</span> maxSize ~= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span>     <span class="hljs-keyword">local</span> currentTime = <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">1</span>]);     <span class="hljs-keyword">local</span> lastAccessTimeSetName = KEYS[<span class="hljs-number">5</span>]; <span class="hljs-keyword">local</span> mode = redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">7</span>], <span class="hljs-string">&#x27;mode&#x27;</span>); <span class="hljs-keyword">if</span> mode == <span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> mode == <span class="hljs-string">&#x27;LRU&#x27;</span> <span class="hljs-keyword">then</span> redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">end</span>;     <span class="hljs-keyword">local</span> cacheSize = <span class="hljs-built_in">tonumber</span>(redis.call(<span class="hljs-string">&#x27;hlen&#x27;</span>, KEYS[<span class="hljs-number">1</span>]));     <span class="hljs-keyword">if</span> cacheSize &gt;= maxSize <span class="hljs-keyword">then</span>         <span class="hljs-keyword">local</span> lruItems = redis.call(<span class="hljs-string">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class="hljs-number">0</span>, cacheSize - maxSize);         <span class="hljs-keyword">for</span> index, lruItem <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(lruItems) <span class="hljs-keyword">do</span>             <span class="hljs-keyword">if</span> lruItem <span class="hljs-keyword">and</span> lruItem ~= ARGV[<span class="hljs-number">5</span>] <span class="hljs-keyword">then</span>                 <span class="hljs-keyword">local</span> lruItemValue = redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">1</span>], lruItem);                 redis.call(<span class="hljs-string">&#x27;hdel&#x27;</span>, KEYS[<span class="hljs-number">1</span>], lruItem);                 redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">2</span>], lruItem);                 redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">3</span>], lruItem);                 redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem);                 <span class="hljs-keyword">if</span> lruItemValue ~= <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span>                 <span class="hljs-keyword">local</span> removedChannelName = KEYS[<span class="hljs-number">6</span>]; <span class="hljs-keyword">local</span> ttl, obj = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&#x27;dLc0&#x27;</span>, lruItemValue);                    <span class="hljs-keyword">local</span> msg = struct.pack(<span class="hljs-string">&#x27;Lc0Lc0&#x27;</span>, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(lruItem), lruItem, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(obj), obj);                redis.call(<span class="hljs-string">&#x27;publish&#x27;</span>, removedChannelName, msg); <span class="hljs-keyword">end</span>;             <span class="hljs-keyword">end</span>;         <span class="hljs-keyword">end</span>;     <span class="hljs-keyword">end</span>; <span class="hljs-keyword">if</span> mode == <span class="hljs-string">&#x27;LFU&#x27;</span> <span class="hljs-keyword">then</span> redis.call(<span class="hljs-string">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class="hljs-number">1</span>, ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">end</span>; <span class="hljs-keyword">end</span>; <span class="hljs-keyword">local</span> val = struct.pack(<span class="hljs-string">&#x27;dLc0&#x27;</span>, <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">4</span>]), <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(ARGV[<span class="hljs-number">6</span>]), ARGV[<span class="hljs-number">6</span>]); redis.call(<span class="hljs-string">&#x27;hset&#x27;</span>, KEYS[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">5</span>], val); <span class="hljs-keyword">local</span> msg = struct.pack(<span class="hljs-string">&#x27;Lc0Lc0&#x27;</span>, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(ARGV[<span class="hljs-number">5</span>]), ARGV[<span class="hljs-number">5</span>], <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(ARGV[<span class="hljs-number">6</span>]), ARGV[<span class="hljs-number">6</span>]); redis.call(<span class="hljs-string">&#x27;publish&#x27;</span>, KEYS[<span class="hljs-number">4</span>], msg); <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">local</span> t, val = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&#x27;dLc0&#x27;</span>, value); redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, KEYS[<span class="hljs-number">3</span>], t + ARGV[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">5</span>]); <span class="hljs-keyword">return</span> val; <span class="hljs-keyword">end</span>; <br></code></pre></td></tr></table></figure><p>这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：</p><ul><li>判断是否需要插入或更新缓存。</li><li>处理缓存的过期逻辑。</li><li>实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。</li><li>在缓存项插入或更新时发布相关消息。</li></ul><p>具体的解读如下：</p><ol><li><p><strong>初始化和获取当前值</strong>：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">local</span> insertable = <span class="hljs-literal">false</span><br><span class="hljs-keyword">local</span> value = redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">5</span>])<br></code></pre></td></tr></table></figure></li><li><p><strong>判断当前缓存项是否存在</strong>：</p><ul><li>如果不存在，则设置<code>insertable</code>为<code>true</code>，表示可以插入新的缓存项。</li><li>如果存在，继续判断其过期时间。<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">if</span> value == <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> <br>    insertable = <span class="hljs-literal">true</span> <br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">local</span> t, val = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&#x27;dLc0&#x27;</span>, value)<br>    <span class="hljs-keyword">local</span> expireDate = <span class="hljs-number">92233720368547758</span><br>    <span class="hljs-keyword">local</span> expireDateScore = redis.call(<span class="hljs-string">&#x27;zscore&#x27;</span>, KEYS[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">5</span>])<br>    <span class="hljs-keyword">if</span> expireDateScore ~= <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> expireDate = <span class="hljs-built_in">tonumber</span>(expireDateScore) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> t ~= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">local</span> expireIdle = redis.call(<span class="hljs-string">&#x27;zscore&#x27;</span>, KEYS[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">5</span>])<br>        <span class="hljs-keyword">if</span> expireIdle ~= <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span> expireDate = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">min</span>(expireDate, <span class="hljs-built_in">tonumber</span>(expireIdle)) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> expireDate &lt;= <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">1</span>]) <span class="hljs-keyword">then</span> insertable = <span class="hljs-literal">true</span> <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>处理可插入的情况</strong>：</p><ul><li>更新或删除过期时间。</li><li>检查缓存大小，并根据LRU或LFU策略进行淘汰。<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">if</span> insertable == <span class="hljs-literal">true</span> <span class="hljs-keyword">then</span> <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">2</span>]) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> <br>        redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, KEYS[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">5</span>])<br>    <span class="hljs-keyword">else</span> <br>        redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">2</span>], ARGV[<span class="hljs-number">5</span>]) <br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">3</span>]) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> <br>        redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, KEYS[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">5</span>])<br>    <span class="hljs-keyword">else</span> <br>        redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">3</span>], ARGV[<span class="hljs-number">5</span>]) <br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">local</span> maxSize = <span class="hljs-built_in">tonumber</span>(redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">7</span>], <span class="hljs-string">&#x27;max-size&#x27;</span>))<br>    <span class="hljs-keyword">if</span> maxSize ~= <span class="hljs-literal">nil</span> <span class="hljs-keyword">and</span> maxSize ~= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">local</span> currentTime = <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">local</span> lastAccessTimeSetName = KEYS[<span class="hljs-number">5</span>]<br>        <span class="hljs-keyword">local</span> mode = redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">7</span>], <span class="hljs-string">&#x27;mode&#x27;</span>)<br>        <span class="hljs-keyword">if</span> mode == <span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> mode == <span class="hljs-string">&#x27;LRU&#x27;</span> <span class="hljs-keyword">then</span> <br>            redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class="hljs-number">5</span>])<br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">local</span> cacheSize = <span class="hljs-built_in">tonumber</span>(redis.call(<span class="hljs-string">&#x27;hlen&#x27;</span>, KEYS[<span class="hljs-number">1</span>]))<br>        <span class="hljs-keyword">if</span> cacheSize &gt;= maxSize <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">local</span> lruItems = redis.call(<span class="hljs-string">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class="hljs-number">0</span>, cacheSize - maxSize)<br>            <span class="hljs-keyword">for</span> index, lruItem <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(lruItems) <span class="hljs-keyword">do</span><br>                <span class="hljs-keyword">if</span> lruItem <span class="hljs-keyword">and</span> lruItem ~= ARGV[<span class="hljs-number">5</span>] <span class="hljs-keyword">then</span><br>                    <span class="hljs-keyword">local</span> lruItemValue = redis.call(<span class="hljs-string">&#x27;hget&#x27;</span>, KEYS[<span class="hljs-number">1</span>], lruItem)<br>                    redis.call(<span class="hljs-string">&#x27;hdel&#x27;</span>, KEYS[<span class="hljs-number">1</span>], lruItem)<br>                    redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">2</span>], lruItem)<br>                    redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, KEYS[<span class="hljs-number">3</span>], lruItem)<br>                    redis.call(<span class="hljs-string">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem)<br>                    <span class="hljs-keyword">if</span> lruItemValue ~= <span class="hljs-literal">false</span> <span class="hljs-keyword">then</span><br>                        <span class="hljs-keyword">local</span> removedChannelName = KEYS[<span class="hljs-number">6</span>]<br>                        <span class="hljs-keyword">local</span> ttl, obj = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&#x27;dLc0&#x27;</span>, lruItemValue)<br>                        <span class="hljs-keyword">local</span> msg = struct.pack(<span class="hljs-string">&#x27;Lc0Lc0&#x27;</span>, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(lruItem), lruItem, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(obj), obj)<br>                        redis.call(<span class="hljs-string">&#x27;publish&#x27;</span>, removedChannelName, msg)<br>                    <span class="hljs-keyword">end</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">if</span> mode == <span class="hljs-string">&#x27;LFU&#x27;</span> <span class="hljs-keyword">then</span> <br>            redis.call(<span class="hljs-string">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class="hljs-number">1</span>, ARGV[<span class="hljs-number">5</span>]) <br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">local</span> val = struct.pack(<span class="hljs-string">&#x27;dLc0&#x27;</span>, <span class="hljs-built_in">tonumber</span>(ARGV[<span class="hljs-number">4</span>]), <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(ARGV[<span class="hljs-number">6</span>]), ARGV[<span class="hljs-number">6</span>])<br>    redis.call(<span class="hljs-string">&#x27;hset&#x27;</span>, KEYS[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">5</span>], val)<br>    <span class="hljs-keyword">local</span> msg = struct.pack(<span class="hljs-string">&#x27;Lc0Lc0&#x27;</span>, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(ARGV[<span class="hljs-number">5</span>]), ARGV[<span class="hljs-number">5</span>], <span class="hljs-built_in">string</span>.<span class="hljs-built_in">len</span>(ARGV[<span class="hljs-number">6</span>]), ARGV[<span class="hljs-number">6</span>])<br>    redis.call(<span class="hljs-string">&#x27;publish&#x27;</span>, KEYS[<span class="hljs-number">4</span>], msg)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>处理不可插入的情况</strong>：</p><ul><li>更新过期时间，并返回现有值。<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-keyword">else</span> <br>    <span class="hljs-keyword">local</span> t, val = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&#x27;dLc0&#x27;</span>, value)<br>    redis.call(<span class="hljs-string">&#x27;zadd&#x27;</span>, KEYS[<span class="hljs-number">3</span>], t + ARGV[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">5</span>])<br>    <span class="hljs-keyword">return</span> val<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure></li></ul></li></ol><h3 id="参数和键值解释"><a href="#参数和键值解释" class="headerlink" title="参数和键值解释"></a>参数和键值解释</h3><ul><li><p><code>KEYS[1]</code>: 哈希表存储缓存项。</p></li><li><p><code>KEYS[2]</code>: 有序集合存储过期时间。</p></li><li><p><code>KEYS[3]</code>: 有序集合存储空闲时间。</p></li><li><p><code>KEYS[4]</code>: 频道名称，用于发布缓存项变更消息。</p></li><li><p><code>KEYS[5]</code>: 有序集合存储最近访问时间（LRU模式）。</p></li><li><p><code>KEYS[6]</code>: 频道名称，用于发布被淘汰的缓存项。</p></li><li><p><code>KEYS[7]</code>: 存储缓存配置（如最大尺寸、模式等）。</p></li><li><p><code>ARGV[1]</code>: 当前时间戳。</p></li><li><p><code>ARGV[2]</code>: 新的过期时间。</p></li><li><p><code>ARGV[3]</code>: 新的空闲时间。</p></li><li><p><code>ARGV[4]</code>: 新缓存项的TTL。</p></li><li><p><code>ARGV[5]</code>: 缓存项的键名。</p></li><li><p><code>ARGV[6]</code>: 缓存项的值。</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用切面或拦截器打印异常日志</title>
    <link href="/2024/07/26/%E4%BD%BF%E7%94%A8%E5%88%87%E9%9D%A2%E6%88%96%E6%8B%A6%E6%88%AA%E5%99%A8%E6%89%93%E5%8D%B0%E5%BC%82%E5%B8%B8%E6%97%A5%E5%BF%97/"/>
    <url>/2024/07/26/%E4%BD%BF%E7%94%A8%E5%88%87%E9%9D%A2%E6%88%96%E6%8B%A6%E6%88%AA%E5%99%A8%E6%89%93%E5%8D%B0%E5%BC%82%E5%B8%B8%E6%97%A5%E5%BF%97/</url>
    
    <content type="html"><![CDATA[<p>在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。</p><h3 id="1-使用切面（Aspect）记录异常日志"><a href="#1-使用切面（Aspect）记录异常日志" class="headerlink" title="1. 使用切面（Aspect）记录异常日志"></a>1. 使用切面（Aspect）记录异常日志</h3><p>Spring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。</p><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li><p><strong>添加依赖</strong>：<br>确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保<code>spring-boot-starter-aop</code>已经在你的<code>pom.xml</code>中。</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>创建切面类</strong>：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.AfterThrowing;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExceptionLoggingAspect</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(ExceptionLoggingAspect.class);<br><br>    <span class="hljs-comment">// 定义一个切入点，拦截所有方法</span><br>    <span class="hljs-meta">@AfterThrowing(pointcut = &quot;execution(* com.yourpackage..*(..))&quot;, throwing = &quot;exception&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">logException</span><span class="hljs-params">(Exception exception)</span> &#123;<br>        logger.error(<span class="hljs-string">&quot;Exception caught: &quot;</span>, exception);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在上述代码中，<code>@AfterThrowing</code>注解用于定义在方法抛出异常后执行的通知。<code>execution(* com.yourpackage..*(..))</code>表示拦截<code>com.yourpackage</code>包及其子包中所有类的所有方法。</p></li></ol><h3 id="2-使用拦截器（Interceptor）记录异常日志"><a href="#2-使用拦截器（Interceptor）记录异常日志" class="headerlink" title="2. 使用拦截器（Interceptor）记录异常日志"></a>2. 使用拦截器（Interceptor）记录异常日志</h3><p>Spring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。</p><h4 id="步骤：-1"><a href="#步骤：-1" class="headerlink" title="步骤："></a>步骤：</h4><ol><li><p><strong>创建拦截器类</strong>：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExceptionLoggingInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">HandlerInterceptor</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">preHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterCompletion</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">if</span> (ex != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// 记录异常日志</span><br>            <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(handler.getClass());<br>            logger.error(<span class="hljs-string">&quot;Exception caught during request processing: &quot;</span>, ex);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>注册拦截器</strong>：</p><p>在Spring Boot应用中，通过配置类注册拦截器。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ExceptionLoggingInterceptor exceptionLoggingInterceptor;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(exceptionLoggingInterceptor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这两种方式各有优劣：</p><ul><li><strong>切面（Aspect）</strong>适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。</li><li><strong>拦截器（Interceptor）</strong>适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。</li></ul><p>选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>在linux上使用代理</title>
    <link href="/2024/07/26/%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/"/>
    <url>/2024/07/26/%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：</p><h3 id="1-安装-Clash-Verge"><a href="#1-安装-Clash-Verge" class="headerlink" title="1. 安装 Clash Verge"></a>1. 安装 Clash Verge</h3><p>首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。</p><h4 id="下载-Clash"><a href="#下载-Clash" class="headerlink" title="下载 Clash"></a>下载 Clash</h4><p><a href="%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/mihomo-linux-amd64-v1.18.6.deb">mihomo-linux-amd64-v1.18.6.deb</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg -i mihomo-linux-amd64-v1.18.6.deb     <br><span class="hljs-built_in">chmod</span> 777 mihomo-linux-amd64-v1.18.6.deb <br>sudo <span class="hljs-built_in">mv</span> mihomo-linux-amd64-v1.18.6 clash<br></code></pre></td></tr></table></figure><h3 id="2-配置-Clash"><a href="#2-配置-Clash" class="headerlink" title="2. 配置 Clash"></a>2. 配置 Clash</h3><p>在使用 Clash Verge 之前，需要先配置 Clash 的 <code>config.yaml</code> 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">拷贝windows上的配置：D:\soft\clash-verge-1.6.2\.config\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<br>wget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml<br></code></pre></td></tr></table></figure><h3 id="3-启动-Clash"><a href="#3-启动-Clash" class="headerlink" title="3. 启动 Clash"></a>3. 启动 Clash</h3><p>在命令行中启动 Clash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> ./clash &amp;<br></code></pre></td></tr></table></figure><p>Clash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 <code>http://localhost:7899</code> 或者其他配置文件中指定的端口。</p><ol><li><strong>创建代理配置文件</strong>：在Kali系统的Docker配置目录下创建一个名为<code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>的文件。如果该目录不存在，请先创建它。</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo <span class="hljs-built_in">mkdir</span> -p /etc/systemd/system/docker.service.d<br>sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>配置代理</strong>：在<code>http-proxy.conf</code>文件中添加以下内容，将<code>http://127.0.0.1:7899</code>替换为你的代理服务器地址和端口。</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Environment</span>=<span class="hljs-string">&quot;HTTP_PROXY=http://127.0.0.1:7899&quot;</span><br><span class="hljs-attr">Environment</span>=<span class="hljs-string">&quot;HTTPS_PROXY=http://127.0.0.1:7899&quot;</span><br><span class="hljs-attr">Environment</span>=<span class="hljs-string">&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>重新加载守护进程并重启Docker服务</strong>：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><ol start="4"><li><strong>验证代理配置</strong>：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker info<br></code></pre></td></tr></table></figure><p>在输出信息中找到<code>HTTP Proxy</code>和<code>HTTPS Proxy</code>条目，检查它们是否显示了你配置的代理服务器地址。</p><p>如果你需要为Docker客户端配置代理（如<code>docker build</code>命令），可以在你的shell配置文件（如<code>~/.bashrc</code>或<code>~/.zshrc</code>）中添加以下行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> HTTP_PROXY=<span class="hljs-string">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class="hljs-built_in">export</span> HTTPS_PROXY=<span class="hljs-string">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class="hljs-built_in">export</span> NO_PROXY=<span class="hljs-string">&quot;localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure><p>保存文件并加载新的配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">source</span> ~/.bashrc  <span class="hljs-comment"># 或者 source ~/.zshrc</span><br></code></pre></td></tr></table></figure><p>这样，Docker客户端在运行时也会通过代理服务器进行连接。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>select for update用法的好处</title>
    <link href="/2024/07/25/select-for-update%E7%94%A8%E6%B3%95%E7%9A%84%E5%A5%BD%E5%A4%84/"/>
    <url>/2024/07/25/select-for-update%E7%94%A8%E6%B3%95%E7%9A%84%E5%A5%BD%E5%A4%84/</url>
    
    <content type="html"><![CDATA[<p><code>SELECT FOR UPDATE</code> 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：</p><h3 id="1-避免脏读、不可重复读和幻读"><a href="#1-避免脏读、不可重复读和幻读" class="headerlink" title="1. 避免脏读、不可重复读和幻读"></a>1. <strong>避免脏读、不可重复读和幻读</strong></h3><p>通过使用 <code>SELECT FOR UPDATE</code>，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：</p><ul><li><strong>脏读</strong>：一个事务可以读取到另一个未提交事务的修改。</li><li><strong>不可重复读</strong>：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。</li><li><strong>幻读</strong>：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。</li></ul><h3 id="2-确保一致性和完整性"><a href="#2-确保一致性和完整性" class="headerlink" title="2. 确保一致性和完整性"></a>2. <strong>确保一致性和完整性</strong></h3><p>在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 <code>SELECT FOR UPDATE</code> 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。</p><h3 id="3-防止丢失更新"><a href="#3-防止丢失更新" class="headerlink" title="3. 防止丢失更新"></a>3. <strong>防止丢失更新</strong></h3><p>当多个事务试图同时更新同一行时，<code>SELECT FOR UPDATE</code> 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。</p><h3 id="4-优化并发控制"><a href="#4-优化并发控制" class="headerlink" title="4. 优化并发控制"></a>4. <strong>优化并发控制</strong></h3><p>使用 <code>SELECT FOR UPDATE</code> 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。</p><h3 id="5-简化编程模型"><a href="#5-简化编程模型" class="headerlink" title="5. 简化编程模型"></a>5. <strong>简化编程模型</strong></h3><p><code>SELECT FOR UPDATE</code> 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。</p><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">BEGIN</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> accounts <span class="hljs-keyword">WHERE</span> account_id <span class="hljs-operator">=</span> <span class="hljs-number">1</span> <span class="hljs-keyword">FOR</span> <span class="hljs-keyword">UPDATE</span>;<br><span class="hljs-comment">-- 执行一些需要锁定这行的操作，例如更新账户余额</span><br><span class="hljs-keyword">UPDATE</span> accounts <span class="hljs-keyword">SET</span> balance <span class="hljs-operator">=</span> balance <span class="hljs-operator">-</span> <span class="hljs-number">100</span> <span class="hljs-keyword">WHERE</span> account_id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">COMMIT</span>;<br></code></pre></td></tr></table></figure><p>在这个示例中，通过 <code>SELECT FOR UPDATE</code> 锁定 <code>account_id = 1</code> 的行，确保在事务提交之前，没有其他事务可以修改该行。</p><p>总的来说，<code>SELECT FOR UPDATE</code> 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>tcp6 如何 改成tcp4</title>
    <link href="/2024/07/25/tcp6-%E5%A6%82%E4%BD%95-%E6%94%B9%E6%88%90tcp4/"/>
    <url>/2024/07/25/tcp6-%E5%A6%82%E4%BD%95-%E6%94%B9%E6%88%90tcp4/</url>
    
    <content type="html"><![CDATA[<p>要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：</p><h3 id="1-修改系统配置"><a href="#1-修改系统配置" class="headerlink" title="1. 修改系统配置"></a>1. 修改系统配置</h3><p>如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。</p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>编辑 <code>/etc/gai.conf</code> 文件，取消 <code>precedence ::ffff:0:0/96  100</code> 的注释。这会让系统优先使用 IPv4。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/gai.conf<br></code></pre></td></tr></table></figure><p>取消下面这行的注释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">precedence ::ffff:0:0/96  100<br></code></pre></td></tr></table></figure><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>可以通过命令行禁用IPv6：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh interface ipv6 <span class="hljs-built_in">set</span> prefixpolicy ::ffff:0:0/96  40 1<br></code></pre></td></tr></table></figure><h3 id="2-配置网络服务"><a href="#2-配置网络服务" class="headerlink" title="2. 配置网络服务"></a>2. 配置网络服务</h3><p>对于具体的网络服务，你可以在配置文件中指定使用 IPv4。</p><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><p>在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">listen</span> [::]:<span class="hljs-number">80</span> ipv6only=<span class="hljs-literal">off</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>将上面的配置改为仅监听 IPv4 地址：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h4><p>在 Apache 的配置文件中，你可以指定监听的 IP 地址：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Listen</span> <span class="hljs-number">80</span><br><span class="hljs-attribute">Listen</span><span class="hljs-meta"> [::]:80</span><br></code></pre></td></tr></table></figure><p>将上面的配置改为仅监听 IPv4 地址：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Listen</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="3-修改应用程序配置"><a href="#3-修改应用程序配置" class="headerlink" title="3. 修改应用程序配置"></a>3. 修改应用程序配置</h3><p>对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>在 Python 应用中，你可以通过 <code>socket</code> 模块指定仅使用 IPv4：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><br><span class="hljs-comment"># 创建一个IPv4的TCP socket</span><br>sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>sock.bind((<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">8080</span>))<br>sock.listen(<span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p>在 Java 应用中，你可以设置 <code>java.net.preferIPv4Stack</code> 系统属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        System.setProperty(<span class="hljs-string">&quot;java.net.preferIPv4Stack&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>);<br>        <span class="hljs-comment">// 其他代码</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nginx配置上传文件大小</title>
    <link href="/2024/07/24/nginx%E9%85%8D%E7%BD%AE%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F/"/>
    <url>/2024/07/24/nginx%E9%85%8D%E7%BD%AE%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F/</url>
    
    <content type="html"><![CDATA[<p>要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：</p><ol><li><p><strong>配置Nginx处理上传文件的大小限制：</strong></p><p>打开您的Nginx配置文件（通常位于 <code>/etc/nginx/nginx.conf</code> 或 <code>/etc/nginx/conf.d/default.conf</code>）并找到 <code>http</code> 块或 <code>server</code> 块。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-comment"># 其他配置...</span><br>    <br>    <span class="hljs-comment"># 设置客户端上传文件的最大限制（单位：字节）</span><br>    <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">50M</span>;<br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span> example.com;<br><br>        <span class="hljs-comment"># 其他配置...</span><br><br>        <span class="hljs-section">location</span> /upload &#123;<br>            <span class="hljs-comment"># 将文件上传到指定的目录</span><br>            <span class="hljs-attribute">root</span> /var/www/uploads;<br><br>            <span class="hljs-comment"># 其他配置...</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这个示例中，<code>client_max_body_size</code> 被设置为 <code>50M</code>，这意味着客户端可以上传最大为50MB的文件。</p></li><li><p><strong>配置上传文件的保存路径：</strong></p><p>您可以在 <code>location</code> 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 <code>/var/www/uploads</code> 目录。</p></li><li><p><strong>重启Nginx以使配置生效：</strong></p><p>修改完配置文件后，需要重启Nginx服务以使配置生效。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl restart nginx<br></code></pre></td></tr></table></figure></li><li><p><strong>处理上传的文件：</strong></p><p>需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。</p><p>这是一个使用PHP处理文件上传的简单示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="hljs-string">&#x27;POST&#x27;</span> &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$uploadDir</span> = <span class="hljs-string">&#x27;/var/www/uploads/&#x27;</span>;<br>    <span class="hljs-variable">$uploadFile</span> = <span class="hljs-variable">$uploadDir</span> . <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$uploadFile</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件上传成功。&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件上传失败。&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后在Nginx的配置文件中，您可以配置一个 <code>location</code> 块来处理文件上传请求：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /upload &#123;<br>    <span class="hljs-attribute">root</span> /var/www/uploads;<br><br>    <span class="hljs-comment"># 代理到后端PHP脚本</span><br>    <span class="hljs-attribute">fastcgi_pass</span> <span class="hljs-number">127.0.0.1:9000</span>;<br>    <span class="hljs-attribute">include</span> fastcgi_params;<br>    <span class="hljs-attribute">fastcgi_param</span> SCRIPT_FILENAME /var/www/html/upload.php;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>docker修改应用为自动启动</title>
    <link href="/2024/07/23/docker%E4%BF%AE%E6%94%B9%E5%BA%94%E7%94%A8%E4%B8%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/"/>
    <url>/2024/07/23/docker%E4%BF%AE%E6%94%B9%E5%BA%94%E7%94%A8%E4%B8%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<p>是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 <code>docker update</code> 命令配置容器的重启策略。</p><p>以下是如何使用 <code>docker update</code> 命令来配置现有的容器在系统启动时自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker update --restart unless-stopped &lt;container_name_or_id&gt;<br></code></pre></td></tr></table></figure><p>例如，如果你的容器名为 <code>mysql-container</code>，你可以这样配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure><p>这样配置后，当系统重启时，Docker 会根据 <code>unless-stopped</code> 策略自动重启该容器。以下是一些常用的重启策略：</p><ul><li><code>no</code>: 容器不会自动重启（默认值）。</li><li><code>on-failure</code>: 仅当容器退出状态非零时才重启。</li><li><code>always</code>: 无论退出状态如何，总是重启容器。</li><li><code>unless-stopped</code>: 容器除非被手动停止，否则总是重启。</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：</p><ol><li><p>启动一个 MySQL 容器：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>    --name mysql-container \<br>    -e MYSQL_ROOT_PASSWORD=my-secret-pw \<br>    -v /my/own/datadir:/var/lib/mysql \<br>    mysql:latest<br></code></pre></td></tr></table></figure></li><li><p>配置容器的重启策略：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure></li></ol><h3 id="检查容器重启策略"><a href="#检查容器重启策略" class="headerlink" title="检查容器重启策略"></a>检查容器重启策略</h3><p>你可以使用以下命令来检查容器的重启策略：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker inspect -f <span class="hljs-string">&#x27;&#123;&#123; .HostConfig.RestartPolicy.Name &#125;&#125;&#x27;</span> mysql-container<br></code></pre></td></tr></table></figure><p>这将输出容器的当前重启策略。</p><h3 id="使用-Docker-Compose"><a href="#使用-Docker-Compose" class="headerlink" title="使用 Docker Compose"></a>使用 Docker Compose</h3><p>如果你使用 Docker Compose，可以在 <code>docker-compose.yml</code> 文件中配置重启策略：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mysql:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql-container</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">my-secret-pw</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/my/own/datadir:/var/lib/mysql</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><p>然后，使用以下命令启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 <code>docker run</code>、<code>docker update</code> 还是 <code>docker-compose</code>。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>linux下实现钉钉告警</title>
    <link href="/2024/07/23/linux%E4%B8%8B%E5%AE%9E%E7%8E%B0%E9%92%89%E9%92%89%E5%91%8A%E8%AD%A6/"/>
    <url>/2024/07/23/linux%E4%B8%8B%E5%AE%9E%E7%8E%B0%E9%92%89%E9%92%89%E5%91%8A%E8%AD%A6/</url>
    
    <content type="html"><![CDATA[<p>在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。<br>需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。</p><p>以下是实现此功能的步骤：</p><ol><li><p><strong>创建钉钉机器人并获取Webhook URL：</strong></p><ul><li>登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。</li></ul></li><li><p><strong>编写Shell脚本：</strong></p><ul><li>编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。</li></ul></li><li><p><strong>配置定时任务（cron）：</strong></p><ul><li>将脚本配置为定时任务，定期检查系统资源的使用情况。</li></ul></li></ol><h3 id="1-创建钉钉机器人并获取Webhook-URL"><a href="#1-创建钉钉机器人并获取Webhook-URL" class="headerlink" title="1. 创建钉钉机器人并获取Webhook URL"></a>1. 创建钉钉机器人并获取Webhook URL</h3><p>在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。</p><ul><li>例如：<a href="https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5">https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</a></li></ul><h3 id="2-编写Shell脚本"><a href="#2-编写Shell脚本" class="headerlink" title="2. 编写Shell脚本"></a>2. 编写Shell脚本</h3><p>下面是一个示例Shell脚本<code>monitor.sh</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 获取cpu使用率</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">get_cpu_usage</span></span>()&#123;<br>    <span class="hljs-built_in">echo</span> $(top -bn1 | grep <span class="hljs-string">&quot;Cpu(s)&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print 100 - $8&#125;&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;printf &quot;%.2f&quot;, $1&#125;&#x27;</span>)<br>&#125;<br><br><span class="hljs-comment"># 获取磁盘使用率</span><br>data_name=<span class="hljs-string">&quot;/&quot;</span> <br>diskUsage=$(<span class="hljs-built_in">df</span> -h | grep -w <span class="hljs-variable">$data_name</span> | awk <span class="hljs-string">&#x27;&#123;print $5&#125;&#x27;</span> | sed <span class="hljs-string">&#x27;s/%//&#x27;</span>)<br><br><span class="hljs-comment"># 获取内存情况</span><br>mem_total=$(free -m | awk <span class="hljs-string">&#x27;NR==2 &#123;print $2&#125;&#x27;</span>)<br>mem_used=$(free -m | awk <span class="hljs-string">&#x27;NR==2 &#123;print $3&#125;&#x27;</span>)<br><br><span class="hljs-comment"># 统计内存使用率</span><br>mem_used_percent=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;scale=2; (<span class="hljs-variable">$mem_used</span> / <span class="hljs-variable">$mem_total</span>) * 100&quot;</span> | bc)<br><br><span class="hljs-comment"># 获取报警时间</span><br>now_time=$(<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%F %T&#x27;</span>)<br><br>user=<span class="hljs-string">&quot;18857415467&quot;</span><br><br><span class="hljs-comment"># 主机信息</span><br>Date_time=$(<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d--%H:%M:%S&quot;</span>)<br>IP_addr=$(hostname -I | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br><span class="hljs-comment"># webhook url</span><br>Dingding_Url=<span class="hljs-string">&quot;https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5&quot;</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">SendDownMessageToDingding</span></span>()&#123;<br>    <span class="hljs-comment"># 发送钉钉消息</span><br>    curl -s <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;Dingding_Url&#125;</span>&quot;</span> -H <span class="hljs-string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="hljs-string">&quot;</span><br><span class="hljs-string">    &#123;</span><br><span class="hljs-string">     &#x27;msgtype&#x27;: &#x27;text&#x27;,</span><br><span class="hljs-string">     &#x27;text&#x27;: &#123;&#x27;content&#x27;: &#x27;资源耗尽警告！\n巡查时间：<span class="hljs-variable">$&#123;Date_time&#125;</span>\nIP地址：<span class="hljs-variable">$&#123;IP_addr&#125;</span>\n资源状况如下:\n【CPU使用率：<span class="hljs-variable">$&#123;cpuUsage&#125;</span>%】\n【磁盘使用率：<span class="hljs-variable">$&#123;diskUsage&#125;</span>%】\n【内存使用率：<span class="hljs-variable">$&#123;mem_used_percent&#125;</span>%】&#x27;&#125;,</span><br><span class="hljs-string">     &#x27;at&#x27;: &#123;&#x27;atMobiles&#x27;: [&#x27;<span class="hljs-variable">$&#123;user&#125;</span>&#x27;], &#x27;isAtAll&#x27;: true&#125;</span><br><span class="hljs-string">      &#125;&quot;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">check</span></span>()&#123;<br>    cpuUsage=$(get_cpu_usage)<br>    <span class="hljs-keyword">if</span> (( $(echo &quot;<span class="hljs-variable">$cpuUsage</span> &gt; <span class="hljs-number">90</span>&quot; | bc -l) )); <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;检测到CPU使用率高于90%，开始1分钟监控...&quot;</span><br>        high_cpu_duration=0<br>        <span class="hljs-keyword">for</span> ((i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">60</span>; i++)); <span class="hljs-keyword">do</span><br>            <span class="hljs-built_in">sleep</span> 1<br>            cpuUsage=$(get_cpu_usage)<br>            <span class="hljs-keyword">if</span> (( $(echo &quot;<span class="hljs-variable">$cpuUsage</span> &gt; <span class="hljs-number">90</span>&quot; | bc -l) )); <span class="hljs-keyword">then</span><br>                ((high_cpu_duration++))<br>            <span class="hljs-keyword">else</span><br>                high_cpu_duration=0<br>            <span class="hljs-keyword">fi</span><br><br>            <span class="hljs-keyword">if</span> (( high_cpu_duration &gt;= <span class="hljs-number">60</span> )); <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;CPU使用率持续高于90%超过1分钟，发送警报...&quot;</span><br>                SendDownMessageToDingding<br>                <span class="hljs-built_in">break</span><br>            <span class="hljs-keyword">fi</span><br>        <span class="hljs-keyword">done</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-keyword">if</span> (( $(echo &quot;<span class="hljs-variable">$diskUsage</span> &gt; <span class="hljs-number">80</span>&quot; | bc -l) )) || (( $(echo &quot;<span class="hljs-variable">$mem_used_percent</span> &gt; <span class="hljs-number">80</span>&quot; | bc -l) )); <span class="hljs-keyword">then</span><br>        SendDownMessageToDingding<br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br>check<br><br></code></pre></td></tr></table></figure><p>将<code>073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</code>替换为你从钉钉获取的Webhook URL的token。</p><h3 id="3-配置定时任务（cron）"><a href="#3-配置定时任务（cron）" class="headerlink" title="3. 配置定时任务（cron）"></a>3. 配置定时任务（cron）</h3><p>通过cron定期运行这个脚本。首先，编辑cron配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">crontab -e<br></code></pre></td></tr></table></figure><p>然后添加以下内容以每分钟运行一次脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">* * * * * /path/to/monitor.sh<br></code></pre></td></tr></table></figure><p>确保脚本<code>monitor.sh</code>有执行权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">chmod</span> +x /path/to/monitor.sh<br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>学习it网站推荐</title>
    <link href="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
    <url>/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<p>分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.</p><h2 id="网站资源"><a href="#网站资源" class="headerlink" title="网站资源"></a>网站资源</h2><h3 id="技术学习网站"><a href="#技术学习网站" class="headerlink" title="技术学习网站"></a>技术学习网站</h3><ul><li>盗版书网站：<a href="https://zh.singlelogin.re/">https://zh.singlelogin.re/</a></li><li>架构师学习 <a href="https://bugstack.cn/md/other/guide-to-reading.html#%E4%B8%80%E3%80%81%E6%9C%AC%E7%AB%99%E7%9F%A5%E8%AF%86%E9%98%85%E8%A7%88" title="https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览">https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览</a><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_PEAqPgamQe.png" class></li><li>源码学习：<a href="https://doocs.github.io/source-code-hunter/#/" title="https://doocs.github.io/source-code-hunter/#/">https://doocs.github.io/source-code-hunter/#/</a><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_qBL4LWSs2U.png" class></li><li>互联网 Java 工程师进阶知识完全扫盲:  <a href="https://doocs.github.io/advanced-java/#/?id=%E4%BA%92%E8%81%94%E7%BD%91-java-%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E5%AE%8C%E5%85%A8%E6%89%AB%E7%9B%B2" title="https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲">https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲</a><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_RtiUPlWbme.png" class></li><li>叶良辰の学习笔记 <a href="https://yangzhiwen911.github.io/zh/guide/" title="https://yangzhiwen911.github.io/zh/guide/">https://yangzhiwen911.github.io/zh/guide/</a><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_tMLd_Cap6a.png" class></li><li>图灵Java架构师学习路线(点击链接看新版本) <a href="https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map" title="https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map">https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map</a><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_-m-m1AZh7M.png" class></li><li><a href="https://www.thebyte.com.cn/" title="深入架构原理与实践">深入架构原理与实践</a> <a href="https://www.thebyte.com.cn/" title="https://www.thebyte.com.cn/">https://www.thebyte.com.cn/</a>;<img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_zZOb0Uu1MN.png" class></li><li>Kubernetes 实践指南 <a href="https://imroc.cc/kubernetes/" title="https://imroc.cc/kubernetes/">https://imroc.cc/kubernetes/</a>;<br>vip破解视频  <a href="https://share.xiaole88.com/%E5%85%B6%E4%BB%96%E4%B8%9C%E8%A5%BF/%E8%80%81%E9%BD%90%E7%9A%84IT%E5%8A%A0%E6%B2%B9%E7%AB%99" title="https://share.xiaole88.com/其他东西/老齐的IT加油站">https://share.xiaole88.com/其他东西/老齐的IT加油站</a><br><a href="https://share.xiaole88.com/K8%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E7%AE%B1" title="https://share.xiaole88.com/K8渗透工具箱">https://share.xiaole88.com/K8渗透工具箱</a></li></ul><h3 id="工具网站："><a href="#工具网站：" class="headerlink" title="工具网站："></a>工具网站：</h3><ul><li><p><a href="https://www.flickr.com/" title="https://www.flickr.com/">https://www.flickr.com/</a>   好的照片不能我一个人分享</p></li><li><p><a href="https://markmap.js.org/repl" title="https://markmap.js.org/repl">https://markmap.js.org/repl</a>  将markmap 生成图例</p><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_bUw4GOE3i3.png" class></li><li><p>苹果id相关：</p><p><a href="https://appleid.stryun.top/" title="https://appleid.stryun.top/">https://appleid.stryun.top/</a></p><p><a href="https://apple.hutaosubconverter.com/hutao" title="https://apple.hutaosubconverter.com/hutao">https://apple.hutaosubconverter.com/hutao</a></p></li></ul><h3 id="营销方向学习："><a href="#营销方向学习：" class="headerlink" title="营销方向学习："></a>营销方向学习：</h3><ul><li><p>宣传图生成 <a href="https://design.palxp.cn/home?tempid=1188" title="https://design.palxp.cn/home?tempid=1188">https://design.palxp.cn/home?tempid=1188</a></p><img src="/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_SOZXE0ImbY.png" class></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
